(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217110,       4332]
NotebookOptionsPosition[    209770,       4101]
NotebookOutlinePosition[    211394,       4152]
CellTagsIndexPosition[    211058,       4140]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Comparing Sorting Algorithms on Rainbow-Colored Bar Charts", "DemoTitle",
 CellChangeTimes->{{3.6727403095714498`*^9, 3.672740316294877*^9}, {
  3.673810844154001*^9, 3.673810902252719*^9}, {3.674488621447879*^9, 
  3.674488624213517*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"li", "=", 
    RowBox[{"RandomSample", "[", 
     RowBox[{"Range", "[", "7", "]"}], "]"}]}], ";"}], "\n"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, 3.6743785466911135`*^9},
 CellID->80882122],

Cell[BoxData[{
 RowBox[{
  RowBox[{"randomize", "[", "n1_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"li1", "=", 
     RowBox[{"RandomSample", "[", 
      RowBox[{"Range", "[", "n1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"liInsert", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"liInsert", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"liInsert", ",", "li1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"liShell", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"liShell", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"liShell", ",", "li1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"liBubble", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"liBubble", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"liBubble", ",", "li1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"liCocktail", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"liCocktail", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"liCocktail", ",", "li1"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"ISort", "[", 
     RowBox[{"liInsert", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", 
    RowBox[{"CSort", "[", 
     RowBox[{"liCocktail", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"BuSort", "[", 
     RowBox[{"liBubble", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";", 
    RowBox[{"SSort", "[", 
     RowBox[{"liShell", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{"liInitial", "=", "li"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, 3.6743785466911135`*^9},
 CellID->59501008],

Cell[BoxData[
 RowBox[{
  RowBox[{"li", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"Range", "[", "10", "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.6743785579093313`*^9}},
 CellID->306412012],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liShell", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"liShell", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"liShell", ",", "li"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.6743785675167785`*^9}},
 CellID->998500875],

Cell[BoxData[
 RowBox[{
  RowBox[{"SSort", "[", "lst_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"list", "=", "lst"}], ",", "incr", ",", "temp", ",", "i", ",", 
      "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"incr", "=", 
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"Length", "[", "list", "]"}], "/", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"incr", ">", "0"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", 
           RowBox[{"incr", "+", "1"}]}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "list", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{
           RowBox[{"temp", "=", 
            RowBox[{"list", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"j", "=", "i"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"j", "\[GreaterEqual]", 
                RowBox[{"(", 
                 RowBox[{"incr", "+", "1"}], ")"}]}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "-", "incr"}], "]"}], "]"}], ">", "temp"}], 
               ")"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "=", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "-", "incr"}], "]"}], "]"}]}], ";", 
              RowBox[{"j", "=", 
               RowBox[{"j", "-", "incr"}]}], ";"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "=", "temp"}], ";", 
           RowBox[{"liShell", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"liShell", ",", "list"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"incr", "\[Equal]", "2"}], ",", 
          RowBox[{"incr", "=", "1"}], ",", 
          RowBox[{"incr", "=", 
           RowBox[{"Round", "[", 
            RowBox[{"incr", "/", "2.2"}], "]"}]}]}], "]"}]}]}], "]"}], ";", 
     "list"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378564557994*^9}},
 CellID->456636908],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liBubble", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"liBubble", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"liBubble", ",", "li"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378585911587*^9}},
 CellID->41373556],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuSort", "[", "array5_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"arr", "=", "array5"}], ",", 
      RowBox[{"swapped", "=", "False"}], ",", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "array5", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"arr", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ">", 
          RowBox[{"arr", "[", 
           RowBox[{"[", 
            RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"arr", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"arr", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"arr", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"arr", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
          RowBox[{"swapped", "=", "True"}], ";", "\[IndentingNewLine]", 
          RowBox[{"liBubble", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"liBubble", ",", "arr"}], "]"}]}], ";"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"swapped", "\[Equal]", "True"}], ",", 
       RowBox[{
        RowBox[{"swapped", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"arr", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ">", 
             RowBox[{"arr", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"temp", "=", 
              RowBox[{"arr", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"arr", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "=", 
              RowBox[{"arr", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"arr", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
             RowBox[{"swapped", "=", "True"}], ";", "\[IndentingNewLine]", 
             RowBox[{"liBubble", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"liBubble", ",", "arr"}], "]"}]}], ";"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]}], "]"}], ";", 
     "arr"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378589189125*^9}},
 CellID->485889499],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liInsert", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"liInsert", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"liInsert", ",", "li"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378592304086*^9}},
 CellID->210716998],

Cell[BoxData[
 RowBox[{
  RowBox[{"ISort", "[", "array1_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"arr", "=", "array1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "arr", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{
        RowBox[{"value", "=", 
         RowBox[{"arr", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", 
        RowBox[{"j", "=", 
         RowBox[{"i", "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"j", "\[GreaterEqual]", "1"}], "&&", 
           RowBox[{
            RowBox[{"arr", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ">", "value"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"arr", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", 
            RowBox[{"arr", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], ";", 
           RowBox[{"j", "--"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"arr", "[", 
          RowBox[{"[", 
           RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", "value"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"liInsert", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"liInsert", ",", "arr"}], "]"}]}]}]}], "]"}], ";", 
     "arr"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378595381852*^9}},
 CellID->295516491],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liCocktail", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"liCocktail", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"liCocktail", ",", "li"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.6743785994090843`*^9}},
 CellID->92461838],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CSort", "[", "array2_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"arr", "=", "array2"}], "}"}], ",", 
     RowBox[{
      RowBox[{"swapped", " ", "=", " ", "True"}], ";", " ", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"swapped", "\[Equal]", "True"}], ",", 
        RowBox[{
         RowBox[{"swapped", ":=", "False"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "<", 
            RowBox[{
             RowBox[{"Length", "[", "arr", "]"}], "-", "1"}]}], ",", 
           RowBox[{"i", "++"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"arr", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", 
              RowBox[{"arr", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"arr", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"arr", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"arr", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"arr", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
              RowBox[{"swapped", "=", "True"}], ";", "\[IndentingNewLine]", 
              RowBox[{"liCocktail", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"liCocktail", ",", "arr"}], "]"}]}], ";"}]}], "]"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"swapped", "\[Equal]", "False"}], ",", 
           RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"swapped", ":=", "False"}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", 
            RowBox[{
             RowBox[{"Length", "[", "arr", "]"}], "-", "1"}]}], ",", 
           RowBox[{"i", ">", "0"}], ",", 
           RowBox[{"i", "--"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"arr", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ">", 
              RowBox[{"arr", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"temp", "=", 
               RowBox[{"arr", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"arr", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "=", 
               RowBox[{"arr", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              RowBox[{
               RowBox[{"arr", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "=", "temp"}], ";", 
              RowBox[{"swapped", ":=", "True"}], ";", "\[IndentingNewLine]", 
              RowBox[{"liCocktail", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"liCocktail", ",", "arr"}], "]"}]}], ";"}]}], "]"}]}],
           "]"}], ";"}]}], "]"}], ";", "arr"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378603647087*^9}, {
   3.6743794909392986`*^9, 3.674379496789861*^9}},
 CellID->296549522],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liBogo", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"liBogo", "=", 
   RowBox[{"Append", "[", 
    RowBox[{"liBogo", ",", "liInitial"}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378606718655*^9}},
 CellID->54585427],

Cell[BoxData[
 RowBox[{
  RowBox[{"BSort", "[", "array3_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"arr", "=", "array3"}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"checkSorted", "[", "arr", "]"}], "\[Equal]", "False"}], ",", 
       RowBox[{
        RowBox[{"arr", "=", 
         RowBox[{"RandomSample", "[", "arr", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"liBogo", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"liBogo", ",", "arr"}], "]"}]}], ";"}]}], "]"}], ";", 
     "arr"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378609293292*^9}, {
   3.674379222235372*^9, 3.6743792403951397`*^9}, 3.6743792944226522`*^9, {
   3.6743793558495026`*^9, 3.6743793583711023`*^9}, 3.6743793951039023`*^9},
 CellID->533275073],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkSorted", "[", "array4_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"sorted", " ", "=", " ", "True"}], ";", " ", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"array4", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ">", 
         RowBox[{"array4", "[", 
          RowBox[{"[", 
           RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"sorted", "=", "False"}], ";", 
         RowBox[{"Break", "[", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"Length", "[", "array4", "]"}], "-", "1"}]}], "}"}]}], "]"}],
     ";", "sorted"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.674378616895221*^9}, {
   3.6743789506711845`*^9, 3.6743789585536327`*^9}, {3.674379001895509*^9, 
   3.674379002113899*^9}, {3.6743791775665436`*^9, 3.674379185514842*^9}},
 CellID->636036723],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ISort", "[", 
   RowBox[{"liInsert", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CSort", "[", 
   RowBox[{"liCocktail", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BSort", "[", 
   RowBox[{"liBogo", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"BuSort", "[", 
   RowBox[{"liBubble", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SSort", "[", 
   RowBox[{"liShell", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6743785466911135`*^9, 3.6743786214003863`*^9}},
 CellID->378081309],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Make", " ", "individual", " ", "functions", " ", "which", " ", "calculate",
    " ", "all", " ", "the", " ", "necesary", " ", "steps", " ", "from", " ", 
   "the", " ", "initial", " ", "order", " ", "of", " ", "the", " ", "list", 
   " ", "to", " ", "the", " ", "completed", " ", "sorted", " ", 
   RowBox[{"list", ".", " ", "Then"}], " ", "take", " ", "steps", " ", "as", 
   " ", "an", " ", "input", " ", "from", " ", "our", " ", "manipulate", " ", 
   "and", " ", "return", " ", "specifically", " ", "that", " ", 
   RowBox[{"step", ".", " ", "Possibly"}], " ", "calculate", " ", "ahead", 
   " ", "of", " ", "time", " ", "and", " ", "recalculate", " ", "only", " ", 
   "when", " ", 
   RowBox[{"randomize", "."}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, {3.6744883262006397`*^9, 3.674488354335978*^9}},
 CellID->703068039],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"shellsort", "[", "step_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"liShell", "[", 
      RowBox[{"[", "step", "]"}], "]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bubblesort", "[", "step_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"liBubble", "[", 
      RowBox[{"[", "step", "]"}], "]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"insertionsort", "[", "step_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"liInsert", "[", 
      RowBox[{"[", "step", "]"}], "]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cocktail", "[", "step_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"liCocktail", "[", 
      RowBox[{"[", "step", "]"}], "]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bogosort", "[", "step_", "]"}], ":=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"liBogo", "[", 
      RowBox[{"[", "step", "]"}], "]"}], ",", 
     RowBox[{"ChartStyle", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.672740520898552*^9, 3.6727405209005523`*^9}, {
   3.6727414407120724`*^9, 3.6727414410231037`*^9}, 3.6727415283208323`*^9, {
   3.672741681041103*^9, 3.6727416875357523`*^9}, {3.672741993257549*^9, 
   3.672742008198549*^9}, {3.672742083295549*^9, 3.672742115981549*^9}, {
   3.6727421803505487`*^9, 3.6727421837485485`*^9}, {3.673086249112402*^9, 
   3.6730862492995*^9}, {3.6730868874819946`*^9, 3.6730869231475306`*^9}, {
   3.673087183849622*^9, 3.6730871925039034`*^9}, 3.673259123793046*^9, 
   3.6733440937916827`*^9, {3.6733442148454676`*^9, 3.6733442587591686`*^9}, {
   3.673691203050806*^9, 3.6736912059106627`*^9}, {3.6736913258795524`*^9, 
   3.673691334482188*^9}, {3.673810052497154*^9, 3.673810054082355*^9}, 
   3.6742075884695997`*^9, {3.6742077879786263`*^9, 3.674207788451559*^9}, {
   3.6742079235960684`*^9, 3.6742079315174165`*^9}, {3.6742079856158743`*^9, 
   3.674207986066134*^9}, 3.67420858097688*^9, {3.6743780083080397`*^9, 
   3.674378062618419*^9}, {3.674378267861277*^9, 3.674378340387459*^9}, {
   3.6743784002901697`*^9, 3.674378404107587*^9}, 3.674378442173149*^9, 
   3.6743784972592554`*^9, 3.674378630732473*^9},
 CellID->798663174]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Pane", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"sort", "\[Equal]", "\"\<shellsort\>\""}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step", ">", 
           RowBox[{"Length", "[", "liShell", "]"}]}], ",", 
          RowBox[{"step", " ", "=", " ", "1"}]}], "]"}], ";", 
        RowBox[{"shellsort", "[", "step", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"sort", "\[Equal]", "\"\<bubblesort\>\""}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step", ">", 
           RowBox[{"Length", "[", "liBubble", "]"}]}], ",", 
          RowBox[{"step", " ", "=", " ", "1"}]}], "]"}], ";", 
        RowBox[{"bubblesort", "[", "step", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sort", "\[Equal]", "\"\<insertionsort\>\""}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step", ">", 
           RowBox[{"Length", "[", "liInsert", "]"}]}], ",", 
          RowBox[{"step", " ", "=", " ", "1"}]}], "]"}], ";", 
        RowBox[{"insertionsort", "[", "step", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"sort", "\[Equal]", "\"\<cocktail\>\""}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step", ">", 
           RowBox[{"Length", "[", "liCocktail", "]"}]}], ",", 
          RowBox[{"step", " ", "=", " ", "1"}]}], "]"}], ";", 
        RowBox[{"cocktail", "[", "step", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"sort", "\[Equal]", "\"\<bogosort\>\""}], ",", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"step", ">", 
           RowBox[{"Length", "[", "liBogo", "]"}]}], ",", 
          RowBox[{"step", " ", "=", " ", "1"}]}], "]"}], ";", 
        RowBox[{"bogosort", "[", "step", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"575", ",", "400"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "elements", ",", "10", ",", 
       "\"\<elements\\n(set, then click \\\"randomize\\\")\>\""}], "}"}], ",",
      "10", ",", "150", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"step", ",", "1", ",", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{"sort", "\[Equal]", "\"\<shellsort\>\""}], ",", 
       RowBox[{"Length", "[", "liShell", "]"}], ",", 
       RowBox[{"sort", "\[Equal]", "\"\<bubblesort\>\""}], ",", 
       RowBox[{"Length", "[", "liBubble", "]"}], ",", 
       RowBox[{"sort", "\[Equal]", "\"\<insertionsort\>\""}], ",", 
       RowBox[{"Length", "[", "liInsert", "]"}], ",", 
       RowBox[{"sort", "\[Equal]", "\"\<cocktail\>\""}], ",", 
       RowBox[{"Length", "[", "liCocktail", "]"}], ",", 
       RowBox[{"sort", "\[Equal]", "\"\<bogosort\>\""}], ",", 
       RowBox[{"Length", "[", "liBogo", "]"}]}], "]"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "Animator"}], ",", " ", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"sort", ",", "\"\<shellsort\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<shellsort\>\"", ",", "\"\<bubblesort\>\"", ",", 
           "\"\<insertionsort\>\"", ",", "\"\<cocktail\>\"", ",", 
           "\"\<bogosort\>\""}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Button", "[", 
       RowBox[{"\"\<randomize\>\"", ",", 
        RowBox[{
         RowBox[{"randomize", "[", "elements", "]"}], ";", 
         RowBox[{"step", "=", "2"}], ";", 
         RowBox[{"step", "=", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", "Automatic"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
   ",", "\[IndentingNewLine]", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
    RowBox[{"{", 
     RowBox[{"elements", ",", "step", ",", "sort"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.672740541671552*^9, {3.673085187240546*^9, 3.673085189565452*^9}, {
   3.6730852546870813`*^9, 3.673085297073845*^9}, {3.6730868397661552`*^9, 
   3.6730868512943335`*^9}, 3.673259133815048*^9, {3.673259202122878*^9, 
   3.673259296532318*^9}, 3.673344105307171*^9, {3.6736912213931847`*^9, 
   3.6736912800685587`*^9}, {3.67369145805611*^9, 3.673691555722677*^9}, {
   3.6736916395579395`*^9, 3.673691639744644*^9}, {3.673692132566973*^9, 
   3.6736921510229607`*^9}, {3.673692515969064*^9, 3.673692516767064*^9}, {
   3.673809402099462*^9, 3.673809438473405*^9}, {3.673809474713169*^9, 
   3.673809479470776*^9}, {3.673809516143613*^9, 3.673809656521278*^9}, {
   3.6738106313229322`*^9, 3.673810631793738*^9}, {3.6742086052691727`*^9, 
   3.6742086112703323`*^9}, {3.67437812289248*^9, 3.6743781440346184`*^9}, {
   3.674378180502949*^9, 3.67437818550181*^9}, {3.674402229152953*^9, 
   3.674402290205813*^9}, {3.674402330902907*^9, 3.6744024345055637`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`elements$$ = 10, $CellContext`sort$$ = 
    "shellsort", $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`elements$$], 10, 
       "elements\n(set, then click \"randomize\")"}, 10, 150, 1}, {
      Hold[$CellContext`step$$], 1, 
      Dynamic[
       Which[$CellContext`sort$$ == "shellsort", 
        Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
        Length[$CellContext`liBubble], $CellContext`sort$$ == "insertionsort", 
        Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
        Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
        Length[$CellContext`liBogo]]], 1}, {{
       Hold[$CellContext`sort$$], "shellsort"}, {
      "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
         "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    575., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`elements$42313$$ = 
    0, $CellContext`step$42314$$ = 0, $CellContext`sort$42315$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`elements$$ = 10, $CellContext`sort$$ = 
        "shellsort", $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`elements$$, $CellContext`elements$42313$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$42314$$, 0], 
        Hold[$CellContext`sort$$, $CellContext`sort$42315$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Which[$CellContext`sort$$ == "shellsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liShell], $CellContext`step$$ = 
           1]; $CellContext`shellsort[$CellContext`step$$], \
$CellContext`sort$$ == "bubblesort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBubble], $CellContext`step$$ = 
           1]; $CellContext`bubblesort[$CellContext`step$$], \
$CellContext`sort$$ == "insertionsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liInsert], $CellContext`step$$ = 
           1]; $CellContext`insertionsort[$CellContext`step$$], \
$CellContext`sort$$ == "cocktail", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liCocktail], $CellContext`step$$ = 
           1]; $CellContext`cocktail[$CellContext`step$$], \
$CellContext`sort$$ == "bogosort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBogo], $CellContext`step$$ = 
           1]; $CellContext`bogosort[$CellContext`step$$]], Alignment -> 
        Center, ImageSize -> {575, 400}], 
      "Specifications" :> {{{$CellContext`elements$$, 10, 
          "elements\n(set, then click \"randomize\")"}, 10, 150, 1, 
         Appearance -> "Labeled"}, {$CellContext`step$$, 1, 
         Dynamic[
          Which[$CellContext`sort$$ == "shellsort", 
           Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
           Length[$CellContext`liBubble], $CellContext`sort$$ == 
           "insertionsort", 
           Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
           Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
           Length[$CellContext`liBogo]]], 1, Appearance -> "Labeled", 
         ControlType -> Animator, AnimationRunning -> 
         False}, {{$CellContext`sort$$, "shellsort"}, {
         "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}, 
         ControlType -> SetterBar, ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
          "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`elements$$, $CellContext`step$$, \
$CellContext`sort$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{618., {274., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`liShell = CompressedData["
1:eJzFy7sNwyAUQFHMHx6Y8Fkgk2SHjOAFsn8XXgMSToFiJRS3OdK9H6/nQQkh
j1qpeQV6E8Xt0cic7I1yFkwz3002U7812qx0481cN9Zs7xaaRYFmBqNocjCO
BoMxNL3KLFr42hxaHmxHSx+NUzFlW33Ff8xqmDAlTX3hbA78Qku5nC2WPG+M
XzKpZk2bSwZupcU0a7m8AarvNao=
        "], $CellContext`shellsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liShell, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBubble = CompressedData["
1:eJx1yLlxwzAQQFFxF8QNEMc24JZcghpw/5mVeDRDfwUveV/Pn++nPB6P54u9
tFDicVrtM/m98hCnV2hwpcHFBnc0uLPRVYPrBjcNLhmcN7htcMvgssENgxOD
cwanBndZiAXuKHBnoasNL004P+nWhssbbmw42XBuw+mGu7aFI8Kd8cOlDuc7
Xl5wY8HJgnMLThfctbYdAe4MHy41ON/w8oQbE04mnJtwOuGu+XepwvmKlzud
DDg34HTAXePvUoHzBS83OulwrsNpf59PeLnSSYNzDU7b+3zEy4VOKpyrcFrf
58OHkwLnCpyW20mGcxlO8+0kwbkEp+l2EuFchNN4OwlwLsBpuJ14OOfh1N9O
Tjh3wun579Td7xfIz1KD
        "], $CellContext`bubblesort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBubble, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liInsert = CompressedData["
1:eJyNyLkRgCAQAEBEBBGP9xqwJUuwAfvPHPAZPAkMNtll29eNM8bwAsqM3YCz
DVqmOHkueqegcQa+Nxqg1+WkN+T8eTNg4yw2LuD79JnVyScbl/B7MWF90530
fM5ynGQ5QTJfT5OcK3kAu9sSOQ==
        "], $CellContext`insertionsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liInsert, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liCocktail = CompressedData["
1:eJx1yLlhwzAQBEDx7vADJL4G3JJLUAPuP7MjB9hVMMl8vX++3/J6vd5/9p8W
SrzcrvdIfs3cxfQJjVxp5GIjdzVyrrGrm9y9yY1NLm1yfpNbm9zc5PIm1zc5
2eRsk9NN7tnnqZ0nHU4ynEw4WXDi4STByYCTG04qnDQ4ceddEe4qcFdgFws5
KeRcYVcbvTTI+cFuLnJ5keuLnC5ytsg96zjtcJrhdMLpgFMPpwlObzhtcFrh
tMCpO08inAR2Gsm5+OHSTc7f9PIk1yc5m+SeeZ51OMtwNuDshjMPZwnOGpxV
OCtwFuHMnaeBnAVyLny41Mj5Ri8Pcn2Qewbc08/LN1xu5/kE5yucL3A+wvnA
L1VyuZ6XCrlc/u8XwoZSgw==
        "], $CellContext`cocktail[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liCocktail, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBogo = CompressedData["
1:eJxNnduhXMsJRNXvP+fglByCE3BujtCbtYqRf+6VzpnZj24aiqJA//z3f/71
7/nnz5///uPPn/f9f6593h33jO9P777637nrvDn2+n663/x+//1w1E++39y3
zh6z/jvHnWeNfb/P7DveemevMfnEHfWr75v7+/35Pv79pP73/W19/z/eaT1+
u853pf2+J1nfNb9P1Efvd7mxZ/1lz/fW5f/f9b6H+K799rjfH75n+h6MO36X
+C7AM+03vl99d/metK6zvwdc9YTfL79bfnf6nm/xdN9T3u/zZ9Z3zp11zfN9
4vvwPPfu8734qkeZu15s+h71Gt/fDw/w3el7qfE90vwe6XvEep1vCfeodfou
cWr16kXqjqvW8rtRvfV3ibfrrmPV9b9n+9by+8F3i29t7ru1nt/rfN+c3283
L1yfPt+CzFqRvOD3yVM//vbk26H68Krdmt/Vvw+x2KzAt5DfW43a6lWvxLt+
m/o987cX33J915r1gt+tVq3eO4dl2/Xe30rUPp8s+3enzd6V9TzW4/vG+n6+
Wa96zVXf/f5wXO31LVFd4PvPtyXTG45a6W/5NZP5Pfn7Xvb70aw1xTjYocsC
ftf4PvA9Qy3Gq0WrxbqD9/yu9F3tliltNmGX4ZQpzlrM7/Gw9s0Ha6e+Bxx1
p5ebcOnaHI4FnzyzLlrXXPX376N18zKR73/1VGVgZRhr9EGoh6yXL0v57Lk2
84wy5rLbz8TrHmUO37LWfqxRt+NKtZ/fgbi+Im/Bsfn2t5Z1YDWzVvoz+zLc
yVPVK162p56ulmLW89Yy1/thk2/xAJ+h39qc76xc9mb1jb4rHnexTjFL/q3K
KMNb9XqfefL0n8Eutqu+9j00z1XfLLv8nq3eZmIi9dF6peW+nVWLXtbxvd93
ye/n38PxzXIJtX5l0N9V6qh9n6mDdubNa81ak+/Jymi/tz213YOL1DFlaW8/
TO0n/qR8mFdvX1CHf9Wyv3qmOjXXjS+LKoMZ5QU02sGZ/m79PUidvNqUWjLs
89v/jTOMI6jD/C33PZzUOgm3rusDlRXesoNyTfXCHMHnXl+c67dKLD3PXK7y
e7X6TgzfffnufstCORjflWPCvLumFU9UJ/niLd/wmevE4ap2uaVTx4j14TB8
S1iHcdYxqJ+VxZdTrOX/Nuv4fnWNkb+Upys/w93qCWoR7jUyHOyJjauP37JX
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
        "], $CellContext`bogosort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBogo, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 520], $CellContext`randomize[
         Pattern[$CellContext`n1$, 
          Blank[]]] := 
       Module[{$CellContext`n$ = $CellContext`n1$}, 
         Clear[$CellContext`Quicksort, $CellContext`li, 
           FE`sort$$24, $CellContext`liQuick, $CellContext`lessArr, \
$CellContext`greaterArr, $CellContext`equalArr, $CellContext`pivot1, \
$CellContext`arr, $CellContext`array1, $CellContext`quicksortRun, \
$CellContext`i, $CellContext`j, $CellContext`liBubble, $CellContext`liInsert, \
$CellContext`liCocktail, $CellContext`liBubble, $CellContext`liShell, \
$CellContext`arr, $CellContext`array1, $CellContext`array2, \
$CellContext`value, $CellContext`swapped, $CellContext`temp, \
$CellContext`li1]; $CellContext`li1 = RandomSample[
            
            Range[$CellContext`n$]]; $CellContext`liInsert = {}; \
$CellContext`liInsert = 
          Append[$CellContext`liInsert, $CellContext`li1]; \
$CellContext`liShell = {}; $CellContext`liShell = 
          Append[$CellContext`liShell, $CellContext`li1]; \
$CellContext`liBubble = {}; $CellContext`liBubble = 
          Append[$CellContext`liBubble, $CellContext`li1]; \
$CellContext`liCocktail = {}; $CellContext`liCocktail = 
          Append[$CellContext`liCocktail, $CellContext`li1]; \
$CellContext`ISort[
           Part[$CellContext`liInsert, 1]]; $CellContext`CSort[
           Part[$CellContext`liCocktail, 1]]; $CellContext`BuSort[
           Part[$CellContext`liBubble, 1]]; $CellContext`SSort[
           Part[$CellContext`liShell, 1]]; Null], 
       Attributes[$CellContext`n1$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`li = {13, 7, 
        11, 8, 1, 5, 20, 12, 14, 17, 9, 6, 19, 18, 10, 16, 2, 4, 3, 15}, 
       FE`sort$$24 = "cocktail", $CellContext`i = 0, $CellContext`j = 
       14, $CellContext`value = 15, $CellContext`swapped := 
       False, $CellContext`temp = 
       4, $CellContext`li1 = {2, 10, 6, 7, 8, 1, 3, 5, 9, 
        4}, $CellContext`ISort[
         Pattern[$CellContext`array1, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array1}, 
         For[$CellContext`i = 2, $CellContext`i <= Length[$CellContext`arr], 
           Increment[$CellContext`i], $CellContext`value = 
            Part[$CellContext`arr, $CellContext`i]; $CellContext`j = \
$CellContext`i - 1; While[
             
             And[$CellContext`j >= 1, 
              Part[$CellContext`arr, $CellContext`j] > $CellContext`value], 
             Part[$CellContext`arr, $CellContext`j + 1] = 
              Part[$CellContext`arr, $CellContext`j]; 
             Decrement[$CellContext`j]; Null]; 
           Part[$CellContext`arr, $CellContext`j + 
              1] = $CellContext`value; $CellContext`liInsert = 
            Append[$CellContext`liInsert, $CellContext`arr]]; \
$CellContext`arr], $CellContext`CSort[
         Pattern[$CellContext`array2, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array2, $CellContext`swapped = 
          True}, While[$CellContext`swapped == 
           True, $CellContext`swapped := False; 
           For[$CellContext`i = 1, $CellContext`i < 
             Length[$CellContext`arr] - 1, 
             Increment[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           If[$CellContext`swapped == False, 
             Break[]]; $CellContext`swapped := False; 
           For[$CellContext`i = Length[$CellContext`arr] - 1, $CellContext`i > 
             0, 
             Decrement[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped := 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           Null]; $CellContext`arr], $CellContext`BuSort[
         Pattern[$CellContext`array5, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array5, $CellContext`swapped = 
          False, $CellContext`n = Length[$CellContext`array5]}, Do[
           If[
           Part[$CellContext`arr, $CellContext`i] > 
            Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
             Part[$CellContext`arr, $CellContext`i]; 
            Part[$CellContext`arr, $CellContext`i] = 
             Part[$CellContext`arr, $CellContext`i + 1]; 
            Part[$CellContext`arr, $CellContext`i + 
               1] = $CellContext`temp; $CellContext`swapped = 
             True; $CellContext`liBubble = 
             Append[$CellContext`liBubble, $CellContext`arr]; 
            Null], {$CellContext`i, 1, $CellContext`n - 1}]; 
         While[$CellContext`swapped == True, $CellContext`swapped = False; Do[
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liBubble = 
               Append[$CellContext`liBubble, $CellContext`arr]; 
              Null], {$CellContext`i, 1, $CellContext`n - 
              1}]]; $CellContext`arr], $CellContext`SSort[
         Pattern[$CellContext`lst, 
          Blank[]]] := 
       Module[{$CellContext`list = $CellContext`lst, $CellContext`incr, \
$CellContext`temp, $CellContext`i, $CellContext`j}, $CellContext`incr = 
          Round[Length[$CellContext`list]/2]; 
         While[$CellContext`incr > 0, 
           For[$CellContext`i = $CellContext`incr + 1, $CellContext`i < 
             Length[$CellContext`list] + 1, 
             
             Increment[$CellContext`i], $CellContext`temp = 
              Part[$CellContext`list, $CellContext`i]; $CellContext`j = \
$CellContext`i; While[
               
               And[$CellContext`j >= $CellContext`incr + 1, 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr] > \
$CellContext`temp], 
               Part[$CellContext`list, $CellContext`j] = 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr]; \
$CellContext`j = $CellContext`j - $CellContext`incr; Null]; 
             Part[$CellContext`list, $CellContext`j] = $CellContext`temp; \
$CellContext`liShell = Append[$CellContext`liShell, $CellContext`list]; Null]; 
           If[$CellContext`incr == 2, $CellContext`incr = 
             1, $CellContext`incr = 
             Round[$CellContext`incr/2.2]]]; $CellContext`list]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->551548572]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
Sorting algorithms put elements of a list in numerical order. This \
Demonstration shows how five different sorting algorithms rearrange numerical \
values shown as vertical bars. We compare the following algorithms in terms \
of the number of steps they take when rearranging the elements in a list: \
shell sort, bubble sort, insertion sort, cocktail sort, and bogosort (fixed \
at seven values because the time complexity demands too many steps for many \
elements).\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.672741076106552*^9, 3.6727411038805523`*^9}, {
  3.6727412132943325`*^9, 3.672741221717175*^9}, {3.6730854045941505`*^9, 
  3.673085418733153*^9}, {3.673085466331376*^9, 3.673085537177878*^9}, {
  3.673086229467112*^9, 3.6730862359375844`*^9}, {3.673086596067642*^9, 
  3.6730866172832336`*^9}, {3.6732601281170197`*^9, 3.6732602139960194`*^9}, {
  3.6733443079034386`*^9, 3.6733443359616575`*^9}, {3.673809895015729*^9, 
  3.673809924870535*^9}, {3.674402478758236*^9, 3.674402510109626*^9}},
 CellID->530434087]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`elements$$ = 42, $CellContext`sort$$ = 
    "cocktail", $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`elements$$], 42, 
       "elements\n(set, then click \"randomize\")"}, 10, 150, 1}, {{
       Hold[$CellContext`step$$], 1}, 1, 
      Dynamic[
       Which[$CellContext`sort$$ == "shellsort", 
        Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
        Length[$CellContext`liBubble], $CellContext`sort$$ == "insertionsort", 
        Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
        Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
        Length[$CellContext`liBogo]]], 1}, {{
       Hold[$CellContext`sort$$], "cocktail"}, {
      "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
         "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    575., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`elements$42376$$ = 
    0, $CellContext`step$42377$$ = 0, $CellContext`sort$42378$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`elements$$ = 42, $CellContext`sort$$ = 
        "cocktail", $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`elements$$, $CellContext`elements$42376$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$42377$$, 0], 
        Hold[$CellContext`sort$$, $CellContext`sort$42378$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Which[$CellContext`sort$$ == "shellsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liShell], $CellContext`step$$ = 
           1]; $CellContext`shellsort[$CellContext`step$$], \
$CellContext`sort$$ == "bubblesort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBubble], $CellContext`step$$ = 
           1]; $CellContext`bubblesort[$CellContext`step$$], \
$CellContext`sort$$ == "insertionsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liInsert], $CellContext`step$$ = 
           1]; $CellContext`insertionsort[$CellContext`step$$], \
$CellContext`sort$$ == "cocktail", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liCocktail], $CellContext`step$$ = 
           1]; $CellContext`cocktail[$CellContext`step$$], \
$CellContext`sort$$ == "bogosort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBogo], $CellContext`step$$ = 
           1]; $CellContext`bogosort[$CellContext`step$$]], Alignment -> 
        Center, ImageSize -> {575, 400}], 
      "Specifications" :> {{{$CellContext`elements$$, 42, 
          "elements\n(set, then click \"randomize\")"}, 10, 150, 1, 
         Appearance -> "Labeled"}, {{$CellContext`step$$, 1}, 1, 
         Dynamic[
          Which[$CellContext`sort$$ == "shellsort", 
           Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
           Length[$CellContext`liBubble], $CellContext`sort$$ == 
           "insertionsort", 
           Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
           Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
           Length[$CellContext`liBogo]]], 1, Appearance -> "Labeled", 
         ControlType -> Animator, AnimationRunning -> 
         False}, {{$CellContext`sort$$, "cocktail"}, {
         "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}, 
         ControlType -> SetterBar, ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
          "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`elements$$, $CellContext`step$$, \
$CellContext`sort$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{618., {274., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`liShell = CompressedData["
1:eJzFy7sNwyAUQFHMHx6Y8Fkgk2SHjOAFsn8XXgMSToFiJRS3OdK9H6/nQQkh
j1qpeQV6E8Xt0cic7I1yFkwz3002U7812qx0481cN9Zs7xaaRYFmBqNocjCO
BoMxNL3KLFr42hxaHmxHSx+NUzFlW33Ff8xqmDAlTX3hbA78Qku5nC2WPG+M
XzKpZk2bSwZupcU0a7m8AarvNao=
        "], $CellContext`shellsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liShell, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBubble = CompressedData["
1:eJx1yLlxwzAQQFFxF8QNEMc24JZcghpw/5mVeDRDfwUveV/Pn++nPB6P54u9
tFDicVrtM/m98hCnV2hwpcHFBnc0uLPRVYPrBjcNLhmcN7htcMvgssENgxOD
cwanBndZiAXuKHBnoasNL004P+nWhssbbmw42XBuw+mGu7aFI8Kd8cOlDuc7
Xl5wY8HJgnMLThfctbYdAe4MHy41ON/w8oQbE04mnJtwOuGu+XepwvmKlzud
DDg34HTAXePvUoHzBS83OulwrsNpf59PeLnSSYNzDU7b+3zEy4VOKpyrcFrf
58OHkwLnCpyW20mGcxlO8+0kwbkEp+l2EuFchNN4OwlwLsBpuJ14OOfh1N9O
Tjh3wun579Td7xfIz1KD
        "], $CellContext`bubblesort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBubble, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liInsert = CompressedData["
1:eJyNyLkRgCAQAEBEBBGP9xqwJUuwAfvPHPAZPAkMNtll29eNM8bwAsqM3YCz
DVqmOHkueqegcQa+Nxqg1+WkN+T8eTNg4yw2LuD79JnVyScbl/B7MWF90530
fM5ynGQ5QTJfT5OcK3kAu9sSOQ==
        "], $CellContext`insertionsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liInsert, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liCocktail = CompressedData["
1:eJx1yLlhwzAQBEDx7vADJL4G3JJLUAPuP7MjB9hVMMl8vX++3/J6vd5/9p8W
SrzcrvdIfs3cxfQJjVxp5GIjdzVyrrGrm9y9yY1NLm1yfpNbm9zc5PIm1zc5
2eRsk9NN7tnnqZ0nHU4ynEw4WXDi4STByYCTG04qnDQ4ceddEe4qcFdgFws5
KeRcYVcbvTTI+cFuLnJ5keuLnC5ytsg96zjtcJrhdMLpgFMPpwlObzhtcFrh
tMCpO08inAR2Gsm5+OHSTc7f9PIk1yc5m+SeeZ51OMtwNuDshjMPZwnOGpxV
OCtwFuHMnaeBnAVyLny41Mj5Ri8Pcn2Qewbc08/LN1xu5/kE5yucL3A+wvnA
L1VyuZ6XCrlc/u8XwoZSgw==
        "], $CellContext`cocktail[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liCocktail, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBogo = CompressedData["
1:eJxNnduhXMsJRNXvP+fglByCE3BujtCbtYqRf+6VzpnZj24aiqJA//z3f/71
7/nnz5///uPPn/f9f6593h33jO9P777637nrvDn2+n663/x+//1w1E++39y3
zh6z/jvHnWeNfb/P7DveemevMfnEHfWr75v7+/35Pv79pP73/W19/z/eaT1+
u853pf2+J1nfNb9P1Efvd7mxZ/1lz/fW5f/f9b6H+K799rjfH75n+h6MO36X
+C7AM+03vl99d/metK6zvwdc9YTfL79bfnf6nm/xdN9T3u/zZ9Z3zp11zfN9
4vvwPPfu8734qkeZu15s+h71Gt/fDw/w3el7qfE90vwe6XvEep1vCfeodfou
cWr16kXqjqvW8rtRvfV3ibfrrmPV9b9n+9by+8F3i29t7ru1nt/rfN+c3283
L1yfPt+CzFqRvOD3yVM//vbk26H68Krdmt/Vvw+x2KzAt5DfW43a6lWvxLt+
m/o987cX33J915r1gt+tVq3eO4dl2/Xe30rUPp8s+3enzd6V9TzW4/vG+n6+
Wa96zVXf/f5wXO31LVFd4PvPtyXTG45a6W/5NZP5Pfn7Xvb70aw1xTjYocsC
ftf4PvA9Qy3Gq0WrxbqD9/yu9F3tliltNmGX4ZQpzlrM7/Gw9s0Ha6e+Bxx1
p5ebcOnaHI4FnzyzLlrXXPX376N18zKR73/1VGVgZRhr9EGoh6yXL0v57Lk2
84wy5rLbz8TrHmUO37LWfqxRt+NKtZ/fgbi+Im/Bsfn2t5Z1YDWzVvoz+zLc
yVPVK162p56ulmLW89Yy1/thk2/xAJ+h39qc76xc9mb1jb4rHnexTjFL/q3K
KMNb9XqfefL0n8Eutqu+9j00z1XfLLv8nq3eZmIi9dF6peW+nVWLXtbxvd93
ye/n38PxzXIJtX5l0N9V6qh9n6mDdubNa81ak+/Jymi/tz213YOL1DFlaW8/
TO0n/qR8mFdvX1CHf9Wyv3qmOjXXjS+LKoMZ5QU02sGZ/m79PUidvNqUWjLs
89v/jTOMI6jD/C33PZzUOgm3rusDlRXesoNyTfXCHMHnXl+c67dKLD3PXK7y
e7X6TgzfffnufstCORjflWPCvLumFU9UJ/niLd/wmevE4ap2uaVTx4j14TB8
S1iHcdYxqJ+VxZdTrOX/Nuv4fnWNkb+Upys/w93qCWoR7jUyHOyJjauP37JX
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
        "], $CellContext`bogosort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBogo, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 520], $CellContext`randomize[
         Pattern[$CellContext`n1$, 
          Blank[]]] := 
       Module[{$CellContext`n$ = $CellContext`n1$}, 
         Clear[$CellContext`Quicksort, $CellContext`li, 
           FE`sort$$24, $CellContext`liQuick, $CellContext`lessArr, \
$CellContext`greaterArr, $CellContext`equalArr, $CellContext`pivot1, \
$CellContext`arr, $CellContext`array1, $CellContext`quicksortRun, \
$CellContext`i, $CellContext`j, $CellContext`liBubble, $CellContext`liInsert, \
$CellContext`liCocktail, $CellContext`liBubble, $CellContext`liShell, \
$CellContext`arr, $CellContext`array1, $CellContext`array2, \
$CellContext`value, $CellContext`swapped, $CellContext`temp, \
$CellContext`li1]; $CellContext`li1 = RandomSample[
            
            Range[$CellContext`n$]]; $CellContext`liInsert = {}; \
$CellContext`liInsert = 
          Append[$CellContext`liInsert, $CellContext`li1]; \
$CellContext`liShell = {}; $CellContext`liShell = 
          Append[$CellContext`liShell, $CellContext`li1]; \
$CellContext`liBubble = {}; $CellContext`liBubble = 
          Append[$CellContext`liBubble, $CellContext`li1]; \
$CellContext`liCocktail = {}; $CellContext`liCocktail = 
          Append[$CellContext`liCocktail, $CellContext`li1]; \
$CellContext`ISort[
           Part[$CellContext`liInsert, 1]]; $CellContext`CSort[
           Part[$CellContext`liCocktail, 1]]; $CellContext`BuSort[
           Part[$CellContext`liBubble, 1]]; $CellContext`SSort[
           Part[$CellContext`liShell, 1]]; Null], 
       Attributes[$CellContext`n1$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`li = {13, 7, 
        11, 8, 1, 5, 20, 12, 14, 17, 9, 6, 19, 18, 10, 16, 2, 4, 3, 15}, 
       FE`sort$$24 = "cocktail", $CellContext`i = 0, $CellContext`j = 
       14, $CellContext`value = 15, $CellContext`swapped := 
       False, $CellContext`temp = 
       4, $CellContext`li1 = {2, 10, 6, 7, 8, 1, 3, 5, 9, 
        4}, $CellContext`ISort[
         Pattern[$CellContext`array1, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array1}, 
         For[$CellContext`i = 2, $CellContext`i <= Length[$CellContext`arr], 
           
           Increment[$CellContext`i], $CellContext`value = 
            Part[$CellContext`arr, $CellContext`i]; $CellContext`j = \
$CellContext`i - 1; While[
             
             And[$CellContext`j >= 1, 
              Part[$CellContext`arr, $CellContext`j] > $CellContext`value], 
             Part[$CellContext`arr, $CellContext`j + 1] = 
              Part[$CellContext`arr, $CellContext`j]; 
             Decrement[$CellContext`j]; Null]; 
           Part[$CellContext`arr, $CellContext`j + 
              1] = $CellContext`value; $CellContext`liInsert = 
            Append[$CellContext`liInsert, $CellContext`arr]]; \
$CellContext`arr], $CellContext`CSort[
         Pattern[$CellContext`array2, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array2, $CellContext`swapped = 
          True}, While[$CellContext`swapped == 
           True, $CellContext`swapped := False; 
           For[$CellContext`i = 1, $CellContext`i < 
             Length[$CellContext`arr] - 1, 
             Increment[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           If[$CellContext`swapped == False, 
             Break[]]; $CellContext`swapped := False; 
           For[$CellContext`i = Length[$CellContext`arr] - 1, $CellContext`i > 
             0, 
             Decrement[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped := 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           Null]; $CellContext`arr], $CellContext`BuSort[
         Pattern[$CellContext`array5, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array5, $CellContext`swapped = 
          False, $CellContext`n = Length[$CellContext`array5]}, Do[
           If[
           Part[$CellContext`arr, $CellContext`i] > 
            Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
             Part[$CellContext`arr, $CellContext`i]; 
            Part[$CellContext`arr, $CellContext`i] = 
             Part[$CellContext`arr, $CellContext`i + 1]; 
            Part[$CellContext`arr, $CellContext`i + 
               1] = $CellContext`temp; $CellContext`swapped = 
             True; $CellContext`liBubble = 
             Append[$CellContext`liBubble, $CellContext`arr]; 
            Null], {$CellContext`i, 1, $CellContext`n - 1}]; 
         While[$CellContext`swapped == True, $CellContext`swapped = False; Do[
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liBubble = 
               Append[$CellContext`liBubble, $CellContext`arr]; 
              Null], {$CellContext`i, 1, $CellContext`n - 
              1}]]; $CellContext`arr], $CellContext`SSort[
         Pattern[$CellContext`lst, 
          Blank[]]] := 
       Module[{$CellContext`list = $CellContext`lst, $CellContext`incr, \
$CellContext`temp, $CellContext`i, $CellContext`j}, $CellContext`incr = 
          Round[Length[$CellContext`list]/2]; 
         While[$CellContext`incr > 0, 
           For[$CellContext`i = $CellContext`incr + 1, $CellContext`i < 
             Length[$CellContext`list] + 1, 
             
             Increment[$CellContext`i], $CellContext`temp = 
              Part[$CellContext`list, $CellContext`i]; $CellContext`j = \
$CellContext`i; While[
               
               And[$CellContext`j >= $CellContext`incr + 1, 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr] > \
$CellContext`temp], 
               Part[$CellContext`list, $CellContext`j] = 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr]; \
$CellContext`j = $CellContext`j - $CellContext`incr; Null]; 
             Part[$CellContext`list, $CellContext`j] = $CellContext`temp; \
$CellContext`liShell = Append[$CellContext`liShell, $CellContext`list]; Null]; 
           If[$CellContext`incr == 2, $CellContext`incr = 
             1, $CellContext`incr = 
             Round[$CellContext`incr/2.2]]]; $CellContext`list]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->1337429152]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`elements$$ = 42, $CellContext`sort$$ = 
    "insertionsort", $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`elements$$], 42, 
       "elements\n(set, then click \"randomize\")"}, 10, 150, 1}, {
      Hold[$CellContext`step$$], 1, 
      Dynamic[
       Which[$CellContext`sort$$ == "shellsort", 
        Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
        Length[$CellContext`liBubble], $CellContext`sort$$ == "insertionsort", 
        Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
        Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
        Length[$CellContext`liBogo]]], 1}, {{
       Hold[$CellContext`sort$$], "insertionsort"}, {
      "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
         "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    575., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`elements$42439$$ = 
    0, $CellContext`step$42440$$ = 0, $CellContext`sort$42441$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`elements$$ = 42, $CellContext`sort$$ = 
        "insertionsort", $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`elements$$, $CellContext`elements$42439$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$42440$$, 0], 
        Hold[$CellContext`sort$$, $CellContext`sort$42441$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Which[$CellContext`sort$$ == "shellsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liShell], $CellContext`step$$ = 
           1]; $CellContext`shellsort[$CellContext`step$$], \
$CellContext`sort$$ == "bubblesort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBubble], $CellContext`step$$ = 
           1]; $CellContext`bubblesort[$CellContext`step$$], \
$CellContext`sort$$ == "insertionsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liInsert], $CellContext`step$$ = 
           1]; $CellContext`insertionsort[$CellContext`step$$], \
$CellContext`sort$$ == "cocktail", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liCocktail], $CellContext`step$$ = 
           1]; $CellContext`cocktail[$CellContext`step$$], \
$CellContext`sort$$ == "bogosort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBogo], $CellContext`step$$ = 
           1]; $CellContext`bogosort[$CellContext`step$$]], Alignment -> 
        Center, ImageSize -> {575, 400}], 
      "Specifications" :> {{{$CellContext`elements$$, 42, 
          "elements\n(set, then click \"randomize\")"}, 10, 150, 1, 
         Appearance -> "Labeled"}, {$CellContext`step$$, 1, 
         Dynamic[
          Which[$CellContext`sort$$ == "shellsort", 
           Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
           Length[$CellContext`liBubble], $CellContext`sort$$ == 
           "insertionsort", 
           Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
           Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
           Length[$CellContext`liBogo]]], 1, Appearance -> "Labeled", 
         ControlType -> Animator, AnimationRunning -> 
         False}, {{$CellContext`sort$$, "insertionsort"}, {
         "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}, 
         ControlType -> SetterBar, ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
          "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`elements$$, $CellContext`step$$, \
$CellContext`sort$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{618., {274., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`liShell = CompressedData["
1:eJzFy7sNwyAUQFHMHx6Y8Fkgk2SHjOAFsn8XXgMSToFiJRS3OdK9H6/nQQkh
j1qpeQV6E8Xt0cic7I1yFkwz3002U7812qx0481cN9Zs7xaaRYFmBqNocjCO
BoMxNL3KLFr42hxaHmxHSx+NUzFlW33Ff8xqmDAlTX3hbA78Qku5nC2WPG+M
XzKpZk2bSwZupcU0a7m8AarvNao=
        "], $CellContext`shellsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liShell, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBubble = CompressedData["
1:eJx1yLlxwzAQQFFxF8QNEMc24JZcghpw/5mVeDRDfwUveV/Pn++nPB6P54u9
tFDicVrtM/m98hCnV2hwpcHFBnc0uLPRVYPrBjcNLhmcN7htcMvgssENgxOD
cwanBndZiAXuKHBnoasNL004P+nWhssbbmw42XBuw+mGu7aFI8Kd8cOlDuc7
Xl5wY8HJgnMLThfctbYdAe4MHy41ON/w8oQbE04mnJtwOuGu+XepwvmKlzud
DDg34HTAXePvUoHzBS83OulwrsNpf59PeLnSSYNzDU7b+3zEy4VOKpyrcFrf
58OHkwLnCpyW20mGcxlO8+0kwbkEp+l2EuFchNN4OwlwLsBpuJ14OOfh1N9O
Tjh3wun579Td7xfIz1KD
        "], $CellContext`bubblesort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBubble, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liInsert = CompressedData["
1:eJyNyLkRgCAQAEBEBBGP9xqwJUuwAfvPHPAZPAkMNtll29eNM8bwAsqM3YCz
DVqmOHkueqegcQa+Nxqg1+WkN+T8eTNg4yw2LuD79JnVyScbl/B7MWF90530
fM5ynGQ5QTJfT5OcK3kAu9sSOQ==
        "], $CellContext`insertionsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liInsert, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liCocktail = CompressedData["
1:eJx1yLlhwzAQBEDx7vADJL4G3JJLUAPuP7MjB9hVMMl8vX++3/J6vd5/9p8W
SrzcrvdIfs3cxfQJjVxp5GIjdzVyrrGrm9y9yY1NLm1yfpNbm9zc5PIm1zc5
2eRsk9NN7tnnqZ0nHU4ynEw4WXDi4STByYCTG04qnDQ4ceddEe4qcFdgFws5
KeRcYVcbvTTI+cFuLnJ5keuLnC5ytsg96zjtcJrhdMLpgFMPpwlObzhtcFrh
tMCpO08inAR2Gsm5+OHSTc7f9PIk1yc5m+SeeZ51OMtwNuDshjMPZwnOGpxV
OCtwFuHMnaeBnAVyLny41Mj5Ri8Pcn2Qewbc08/LN1xu5/kE5yucL3A+wvnA
L1VyuZ6XCrlc/u8XwoZSgw==
        "], $CellContext`cocktail[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liCocktail, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBogo = CompressedData["
1:eJxNnduhXMsJRNXvP+fglByCE3BujtCbtYqRf+6VzpnZj24aiqJA//z3f/71
7/nnz5///uPPn/f9f6593h33jO9P777637nrvDn2+n663/x+//1w1E++39y3
zh6z/jvHnWeNfb/P7DveemevMfnEHfWr75v7+/35Pv79pP73/W19/z/eaT1+
u853pf2+J1nfNb9P1Efvd7mxZ/1lz/fW5f/f9b6H+K799rjfH75n+h6MO36X
+C7AM+03vl99d/metK6zvwdc9YTfL79bfnf6nm/xdN9T3u/zZ9Z3zp11zfN9
4vvwPPfu8734qkeZu15s+h71Gt/fDw/w3el7qfE90vwe6XvEep1vCfeodfou
cWr16kXqjqvW8rtRvfV3ibfrrmPV9b9n+9by+8F3i29t7ru1nt/rfN+c3283
L1yfPt+CzFqRvOD3yVM//vbk26H68Krdmt/Vvw+x2KzAt5DfW43a6lWvxLt+
m/o987cX33J915r1gt+tVq3eO4dl2/Xe30rUPp8s+3enzd6V9TzW4/vG+n6+
Wa96zVXf/f5wXO31LVFd4PvPtyXTG45a6W/5NZP5Pfn7Xvb70aw1xTjYocsC
ftf4PvA9Qy3Gq0WrxbqD9/yu9F3tliltNmGX4ZQpzlrM7/Gw9s0Ha6e+Bxx1
p5ebcOnaHI4FnzyzLlrXXPX376N18zKR73/1VGVgZRhr9EGoh6yXL0v57Lk2
84wy5rLbz8TrHmUO37LWfqxRt+NKtZ/fgbi+Im/Bsfn2t5Z1YDWzVvoz+zLc
yVPVK162p56ulmLW89Yy1/thk2/xAJ+h39qc76xc9mb1jb4rHnexTjFL/q3K
KMNb9XqfefL0n8Eutqu+9j00z1XfLLv8nq3eZmIi9dF6peW+nVWLXtbxvd93
ye/n38PxzXIJtX5l0N9V6qh9n6mDdubNa81ak+/Jymi/tz213YOL1DFlaW8/
TO0n/qR8mFdvX1CHf9Wyv3qmOjXXjS+LKoMZ5QU02sGZ/m79PUidvNqUWjLs
89v/jTOMI6jD/C33PZzUOgm3rusDlRXesoNyTfXCHMHnXl+c67dKLD3PXK7y
e7X6TgzfffnufstCORjflWPCvLumFU9UJ/niLd/wmevE4ap2uaVTx4j14TB8
S1iHcdYxqJ+VxZdTrOX/Nuv4fnWNkb+Upys/w93qCWoR7jUyHOyJjauP37JX
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
        "], $CellContext`bogosort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBogo, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 520], $CellContext`randomize[
         Pattern[$CellContext`n1$, 
          Blank[]]] := 
       Module[{$CellContext`n$ = $CellContext`n1$}, 
         Clear[$CellContext`Quicksort, $CellContext`li, 
           FE`sort$$24, $CellContext`liQuick, $CellContext`lessArr, \
$CellContext`greaterArr, $CellContext`equalArr, $CellContext`pivot1, \
$CellContext`arr, $CellContext`array1, $CellContext`quicksortRun, \
$CellContext`i, $CellContext`j, $CellContext`liBubble, $CellContext`liInsert, \
$CellContext`liCocktail, $CellContext`liBubble, $CellContext`liShell, \
$CellContext`arr, $CellContext`array1, $CellContext`array2, \
$CellContext`value, $CellContext`swapped, $CellContext`temp, \
$CellContext`li1]; $CellContext`li1 = RandomSample[
            
            Range[$CellContext`n$]]; $CellContext`liInsert = {}; \
$CellContext`liInsert = 
          Append[$CellContext`liInsert, $CellContext`li1]; \
$CellContext`liShell = {}; $CellContext`liShell = 
          Append[$CellContext`liShell, $CellContext`li1]; \
$CellContext`liBubble = {}; $CellContext`liBubble = 
          Append[$CellContext`liBubble, $CellContext`li1]; \
$CellContext`liCocktail = {}; $CellContext`liCocktail = 
          Append[$CellContext`liCocktail, $CellContext`li1]; \
$CellContext`ISort[
           Part[$CellContext`liInsert, 1]]; $CellContext`CSort[
           Part[$CellContext`liCocktail, 1]]; $CellContext`BuSort[
           Part[$CellContext`liBubble, 1]]; $CellContext`SSort[
           Part[$CellContext`liShell, 1]]; Null], 
       Attributes[$CellContext`n1$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`li = {13, 7, 
        11, 8, 1, 5, 20, 12, 14, 17, 9, 6, 19, 18, 10, 16, 2, 4, 3, 15}, 
       FE`sort$$24 = "cocktail", $CellContext`i = 0, $CellContext`j = 
       14, $CellContext`value = 15, $CellContext`swapped := 
       False, $CellContext`temp = 
       4, $CellContext`li1 = {2, 10, 6, 7, 8, 1, 3, 5, 9, 
        4}, $CellContext`ISort[
         Pattern[$CellContext`array1, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array1}, 
         For[$CellContext`i = 2, $CellContext`i <= Length[$CellContext`arr], 
           
           Increment[$CellContext`i], $CellContext`value = 
            Part[$CellContext`arr, $CellContext`i]; $CellContext`j = \
$CellContext`i - 1; While[
             
             And[$CellContext`j >= 1, 
              Part[$CellContext`arr, $CellContext`j] > $CellContext`value], 
             Part[$CellContext`arr, $CellContext`j + 1] = 
              Part[$CellContext`arr, $CellContext`j]; 
             Decrement[$CellContext`j]; Null]; 
           Part[$CellContext`arr, $CellContext`j + 
              1] = $CellContext`value; $CellContext`liInsert = 
            Append[$CellContext`liInsert, $CellContext`arr]]; \
$CellContext`arr], $CellContext`CSort[
         Pattern[$CellContext`array2, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array2, $CellContext`swapped = 
          True}, While[$CellContext`swapped == 
           True, $CellContext`swapped := False; 
           For[$CellContext`i = 1, $CellContext`i < 
             Length[$CellContext`arr] - 1, 
             Increment[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           If[$CellContext`swapped == False, 
             Break[]]; $CellContext`swapped := False; 
           For[$CellContext`i = Length[$CellContext`arr] - 1, $CellContext`i > 
             0, 
             Decrement[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped := 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           Null]; $CellContext`arr], $CellContext`BuSort[
         Pattern[$CellContext`array5, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array5, $CellContext`swapped = 
          False, $CellContext`n = Length[$CellContext`array5]}, Do[
           If[
           Part[$CellContext`arr, $CellContext`i] > 
            Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
             Part[$CellContext`arr, $CellContext`i]; 
            Part[$CellContext`arr, $CellContext`i] = 
             Part[$CellContext`arr, $CellContext`i + 1]; 
            Part[$CellContext`arr, $CellContext`i + 
               1] = $CellContext`temp; $CellContext`swapped = 
             True; $CellContext`liBubble = 
             Append[$CellContext`liBubble, $CellContext`arr]; 
            Null], {$CellContext`i, 1, $CellContext`n - 1}]; 
         While[$CellContext`swapped == True, $CellContext`swapped = False; Do[
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liBubble = 
               Append[$CellContext`liBubble, $CellContext`arr]; 
              Null], {$CellContext`i, 1, $CellContext`n - 
              1}]]; $CellContext`arr], $CellContext`SSort[
         Pattern[$CellContext`lst, 
          Blank[]]] := 
       Module[{$CellContext`list = $CellContext`lst, $CellContext`incr, \
$CellContext`temp, $CellContext`i, $CellContext`j}, $CellContext`incr = 
          Round[Length[$CellContext`list]/2]; 
         While[$CellContext`incr > 0, 
           For[$CellContext`i = $CellContext`incr + 1, $CellContext`i < 
             Length[$CellContext`list] + 1, 
             
             Increment[$CellContext`i], $CellContext`temp = 
              Part[$CellContext`list, $CellContext`i]; $CellContext`j = \
$CellContext`i; While[
               
               And[$CellContext`j >= $CellContext`incr + 1, 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr] > \
$CellContext`temp], 
               Part[$CellContext`list, $CellContext`j] = 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr]; \
$CellContext`j = $CellContext`j - $CellContext`incr; Null]; 
             Part[$CellContext`list, $CellContext`j] = $CellContext`temp; \
$CellContext`liShell = Append[$CellContext`liShell, $CellContext`list]; Null]; 
           If[$CellContext`incr == 2, $CellContext`incr = 
             1, $CellContext`incr = 
             Round[$CellContext`incr/2.2]]]; $CellContext`list]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->460424515],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`elements$$ = 48, $CellContext`sort$$ = 
    "insertionsort", $CellContext`step$$ = 11, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`elements$$], 48, 
       "elements\n(set, then click \"randomize\")"}, 10, 150, 1}, {{
       Hold[$CellContext`step$$], 11}, 1, 
      Dynamic[
       Which[$CellContext`sort$$ == "shellsort", 
        Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
        Length[$CellContext`liBubble], $CellContext`sort$$ == "insertionsort", 
        Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
        Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
        Length[$CellContext`liBogo]]], 1}, {{
       Hold[$CellContext`sort$$], "insertionsort"}, {
      "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
         "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    575., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`elements$42502$$ = 
    0, $CellContext`step$42503$$ = 0, $CellContext`sort$42504$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`elements$$ = 48, $CellContext`sort$$ = 
        "insertionsort", $CellContext`step$$ = 11}, "ControllerVariables" :> {
        Hold[$CellContext`elements$$, $CellContext`elements$42502$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$42503$$, 0], 
        Hold[$CellContext`sort$$, $CellContext`sort$42504$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Which[$CellContext`sort$$ == "shellsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liShell], $CellContext`step$$ = 
           1]; $CellContext`shellsort[$CellContext`step$$], \
$CellContext`sort$$ == "bubblesort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBubble], $CellContext`step$$ = 
           1]; $CellContext`bubblesort[$CellContext`step$$], \
$CellContext`sort$$ == "insertionsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liInsert], $CellContext`step$$ = 
           1]; $CellContext`insertionsort[$CellContext`step$$], \
$CellContext`sort$$ == "cocktail", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liCocktail], $CellContext`step$$ = 
           1]; $CellContext`cocktail[$CellContext`step$$], \
$CellContext`sort$$ == "bogosort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBogo], $CellContext`step$$ = 
           1]; $CellContext`bogosort[$CellContext`step$$]], Alignment -> 
        Center, ImageSize -> {575, 400}], 
      "Specifications" :> {{{$CellContext`elements$$, 48, 
          "elements\n(set, then click \"randomize\")"}, 10, 150, 1, 
         Appearance -> "Labeled"}, {{$CellContext`step$$, 11}, 1, 
         Dynamic[
          Which[$CellContext`sort$$ == "shellsort", 
           Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
           Length[$CellContext`liBubble], $CellContext`sort$$ == 
           "insertionsort", 
           Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
           Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
           Length[$CellContext`liBogo]]], 1, Appearance -> "Labeled", 
         ControlType -> Animator, AnimationRunning -> 
         False}, {{$CellContext`sort$$, "insertionsort"}, {
         "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}, 
         ControlType -> SetterBar, ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
          "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`elements$$, $CellContext`step$$, \
$CellContext`sort$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{618., {274., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`liShell = CompressedData["
1:eJzFy7sNwyAUQFHMHx6Y8Fkgk2SHjOAFsn8XXgMSToFiJRS3OdK9H6/nQQkh
j1qpeQV6E8Xt0cic7I1yFkwz3002U7812qx0481cN9Zs7xaaRYFmBqNocjCO
BoMxNL3KLFr42hxaHmxHSx+NUzFlW33Ff8xqmDAlTX3hbA78Qku5nC2WPG+M
XzKpZk2bSwZupcU0a7m8AarvNao=
        "], $CellContext`shellsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liShell, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBubble = CompressedData["
1:eJx1yLlxwzAQQFFxF8QNEMc24JZcghpw/5mVeDRDfwUveV/Pn++nPB6P54u9
tFDicVrtM/m98hCnV2hwpcHFBnc0uLPRVYPrBjcNLhmcN7htcMvgssENgxOD
cwanBndZiAXuKHBnoasNL004P+nWhssbbmw42XBuw+mGu7aFI8Kd8cOlDuc7
Xl5wY8HJgnMLThfctbYdAe4MHy41ON/w8oQbE04mnJtwOuGu+XepwvmKlzud
DDg34HTAXePvUoHzBS83OulwrsNpf59PeLnSSYNzDU7b+3zEy4VOKpyrcFrf
58OHkwLnCpyW20mGcxlO8+0kwbkEp+l2EuFchNN4OwlwLsBpuJ14OOfh1N9O
Tjh3wun579Td7xfIz1KD
        "], $CellContext`bubblesort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBubble, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liInsert = CompressedData["
1:eJyNyLkRgCAQAEBEBBGP9xqwJUuwAfvPHPAZPAkMNtll29eNM8bwAsqM3YCz
DVqmOHkueqegcQa+Nxqg1+WkN+T8eTNg4yw2LuD79JnVyScbl/B7MWF90530
fM5ynGQ5QTJfT5OcK3kAu9sSOQ==
        "], $CellContext`insertionsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liInsert, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liCocktail = CompressedData["
1:eJx1yLlhwzAQBEDx7vADJL4G3JJLUAPuP7MjB9hVMMl8vX++3/J6vd5/9p8W
SrzcrvdIfs3cxfQJjVxp5GIjdzVyrrGrm9y9yY1NLm1yfpNbm9zc5PIm1zc5
2eRsk9NN7tnnqZ0nHU4ynEw4WXDi4STByYCTG04qnDQ4ceddEe4qcFdgFws5
KeRcYVcbvTTI+cFuLnJ5keuLnC5ytsg96zjtcJrhdMLpgFMPpwlObzhtcFrh
tMCpO08inAR2Gsm5+OHSTc7f9PIk1yc5m+SeeZ51OMtwNuDshjMPZwnOGpxV
OCtwFuHMnaeBnAVyLny41Mj5Ri8Pcn2Qewbc08/LN1xu5/kE5yucL3A+wvnA
L1VyuZ6XCrlc/u8XwoZSgw==
        "], $CellContext`cocktail[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liCocktail, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBogo = CompressedData["
1:eJxNnduhXMsJRNXvP+fglByCE3BujtCbtYqRf+6VzpnZj24aiqJA//z3f/71
7/nnz5///uPPn/f9f6593h33jO9P777637nrvDn2+n663/x+//1w1E++39y3
zh6z/jvHnWeNfb/P7DveemevMfnEHfWr75v7+/35Pv79pP73/W19/z/eaT1+
u853pf2+J1nfNb9P1Efvd7mxZ/1lz/fW5f/f9b6H+K799rjfH75n+h6MO36X
+C7AM+03vl99d/metK6zvwdc9YTfL79bfnf6nm/xdN9T3u/zZ9Z3zp11zfN9
4vvwPPfu8734qkeZu15s+h71Gt/fDw/w3el7qfE90vwe6XvEep1vCfeodfou
cWr16kXqjqvW8rtRvfV3ibfrrmPV9b9n+9by+8F3i29t7ru1nt/rfN+c3283
L1yfPt+CzFqRvOD3yVM//vbk26H68Krdmt/Vvw+x2KzAt5DfW43a6lWvxLt+
m/o987cX33J915r1gt+tVq3eO4dl2/Xe30rUPp8s+3enzd6V9TzW4/vG+n6+
Wa96zVXf/f5wXO31LVFd4PvPtyXTG45a6W/5NZP5Pfn7Xvb70aw1xTjYocsC
ftf4PvA9Qy3Gq0WrxbqD9/yu9F3tliltNmGX4ZQpzlrM7/Gw9s0Ha6e+Bxx1
p5ebcOnaHI4FnzyzLlrXXPX376N18zKR73/1VGVgZRhr9EGoh6yXL0v57Lk2
84wy5rLbz8TrHmUO37LWfqxRt+NKtZ/fgbi+Im/Bsfn2t5Z1YDWzVvoz+zLc
yVPVK162p56ulmLW89Yy1/thk2/xAJ+h39qc76xc9mb1jb4rHnexTjFL/q3K
KMNb9XqfefL0n8Eutqu+9j00z1XfLLv8nq3eZmIi9dF6peW+nVWLXtbxvd93
ye/n38PxzXIJtX5l0N9V6qh9n6mDdubNa81ak+/Jymi/tz213YOL1DFlaW8/
TO0n/qR8mFdvX1CHf9Wyv3qmOjXXjS+LKoMZ5QU02sGZ/m79PUidvNqUWjLs
89v/jTOMI6jD/C33PZzUOgm3rusDlRXesoNyTfXCHMHnXl+c67dKLD3PXK7y
e7X6TgzfffnufstCORjflWPCvLumFU9UJ/niLd/wmevE4ap2uaVTx4j14TB8
S1iHcdYxqJ+VxZdTrOX/Nuv4fnWNkb+Upys/w93qCWoR7jUyHOyJjauP37JX
jvrlxb/nmgfvdMsVP96s3l9jLQOq6HE4SLWKGMGeWnd9ok5imXZ5EbasDPo7
lLcO63lu98Qq4oUn/rbdSbnB77Z16j4D5G6fo9bnlMV/P1l+4zOlb8cObv77
wubI1+pgO/XD8s1lSpvg833eU1ZxaA4vuPFjn/Mggqw6NN9rEFlPbf0tC1sc
9kSiGLu+eBytl4Dwjk6t7INwVFdeG//+PUhZ/S6vg6Mt5/Hd/dXnOI3f8/Cy
3/qXz9i18NdzWc9uOF8YaT0hUapW73soIEHZYT3KWB7OWsVbm8mprANUplMb
d3NCz+acY6qEfc7j9lh9j/U9xCI8VNyrN6wQXQ9bK1GHpM7D8nSWQ6swuYUX
e+s4ygjrIcr9xvq/bWU7H1FqlM3WcSp3+S0pTupbIpzNrqOGmyvXWFbwlkBo
1I4RCFmeejI+qfMlktaSx7HvMgPsqZa9IvItK5hjC1/qCNTZuKz/quWvA7z9
/iE6vjikNTh/OO7vVsTuk1WqjSqgVChqTY/wLg/9vXSFxO/EFUgqi6qPsEa1
BmWJG+zEcakn+S68KlSwlaCmRUitCKev+B6R2FkOmHjbYA6bWtzCN6zjwuqM
OidCC1yfMCTGwNmcFTt5tcPprx9OonO9KXY0AAb1qPj3xSGpCDu4f63kAc5d
96BOSb3d44QUftnAhQ2YvWXMIAvc02C1Ti82wekahhbOukKesatOUf2GD+Zs
H4LexCF5qA5AbRA9v+XiyeuzQR4PY1v1qOXMhCVAv+/Cl/CrqzvYEKegPD4x
Z2FhfvjpGkE4C/A8MbotmvS0f16FAH/j9iefYOW/Hao1GOKkWu6KffiKginB
yRuQ+PKAJ35clIYD1FN9J7mx3mUlDIbEwu/xDBCjY2qtzShXI0QuMPv0Cwu/
Dkwtp3kADLvMgO0GW7mqtRKb+IdT4drfTpdhnspiHiCuDsuOL8D264uLNSyb
F2Ttej/QDJH5e1zC5cvddZYDH1VuhmPI1njdY2ry5g8wkRbUvtc7EqPIasA1
nMlBPMBV1GtjwaCuDaTiZcgyWIx67zI3NqXSijqcxlFODkmWEOZ7gjZSU7Y6
DbO8AOso+Lv1XXzRMOoLBPTpgvSCDBiVR4KgezpjGIa+BO3yzEczq9hT71iP
ayypc3GWZ7kMzTP8QBGA4u2BemCJevrCOHuLdCvcFprAYZc9JCnCSMvG14jN
k989HEatd7n2N+Mu/DJPKNz0ONV+3qN/Ak5/aM1wUW6yDqxpRXB3nYXvK/XV
Mh4PXr1SnWngwdK2D7CijhNoZQgACn5UvAchYKZ1OFnyBwZ6FVprVyaAYuA4
CqKCmBPKE8fwWCCa20GbA4Rr4K0XCB+jIFsEhnBuxyOUEpIA9ljEJs+pCNkx
C3RSVlwQnHyytq0ODb6x7kDqbt5wB79mo9ku8ctitTrC1oZXIGAhQW1uw+W0
iPdq4cfQOxqV3jI8gV95i8IgAMLn+Zs7G95ZweI1wUsfxJnkDMeNrxV6AGvR
BeFGbzE6K6+lqfNXeR+46AAB6+/bkGBMGLVYN89cEKyu2u7QnBB0/czk6iia
zid5PVjd3qxAvd0mkxr1p4e1T5KCwhNXkMPrTmM5+7tJlSqJnABtH7oP8yBy
4WyA+ZynHAvcSqHYC7olyJg51ltxbdIc3oN46bmPG92mk8Gr8Ay7IyxBcZZP
fRxWHIN+++jVevvrAUgr9YZBYuwKQP57dL3MnLgIfgZ0JR8yZ+vIC3y/Hekx
960DGjlbleaSLG0ejAyBjK8OGa55gD20tPLEBLrvuO8cfGDuNU6FYyFPxfUR
0aVZ9GP1/PXIxqFCGYBaYytoqEIOsC6p5dJDvD4x0G6xlzrhi7SGTR0GRdKD
OY3QBfGg5ng2TvpsBg8363OUiQygR+DzNJGfMcJiLgpdmLsRDNfqhIV0AJYQ
JqSc8ZNSEmbx5gVVyG7FY4U8CFN1IgpDk5lt/3KSvTww0NZJLHmsd3Q7ZAFj
gw9rjUmCSWufp32u6cUT3IZYjHBQlBChfD25QwioswWikiPNXFzc7tDRgPCg
cSonHKxDwRq8Z/gNwBoHFUMiLg/xcfm78q5h4SQzN2nLJi2twGB61ZBY6ufI
jpXJ39PMqrizTm0tzn2/1HlcktCZpHZu8QcHXG6yAI/b8I77DHrn8W8yO8Jh
YdRN7K87EEiXTCv2jyc5QEyTDDDIeeL0ZRy85i8AF0DblnuBUhgYGsdxABSn
YK8MqSJhAXIO4vMuGOR3AoxqRM2ii6B3E2VINcDSfHgvrRkXlqx06vYxhXVC
aMDnVkYrdBeMTsLxDZWUgDJwGyD3SluHm0yYrkBbHohsALIR0oi4OUCbZRu4
dBIqGc8D3quYPLGTEdj7gzHE3xAhrHhFQbm/o2VPeG9CwmnayXSQNzrDjGK/
pNw54brejj0gRYxvk30RVcMamY0b+QfpBFm72eYCXMqCnsMBvTEwrO/7E46d
eLnHS/gU/yWlxO/NA0E7l3zMhjKesFisEHFvi/VOk7AysNvTU6HmiOyeCRk7
A+H5ZFoxHGBGWeuVKp2QTFt+YUCynat32XFv+krDFC6dzOpATIe9C3FCSJyP
WxzIwIK5ViDaoxiyhmRQXeUz1YATFndeDvHaXcUgcW7Gs46CjEp5NI31SpEN
KbIt47STc1EheKQHJNiYWz1wgYEKJfi6DR2NIwzdDiaaS47E7Tidr0CNrSAA
05rzRmh3YSOmcEynXtcKIHBrf0ladgMY09kVH0bSn6ULIUmFpTAKxYXN8TvH
ItTgqIKah9a2yxRrW8dO2Yj8SMu3ZvXGTKoxktVDZK5QiDD5ZUngtYn7rRvV
9stj3ODzIxe4JLCWhSAsG5ZxGzvKKiVuR/h5XN619FW2AqWX4/Qs6OCUX7z9
DN23PNTBycF1F0f7QiEa6VhrOKQCKRcWOha6BN7jZV1ynofYo3YETpvdwWOO
rA/FE8ht2PoQNtOAkL+VqXIRcvRnZAlFYDlgx7yBUQ94JO3PSoOfjsnNSRVK
CmtSm+P8DQ2vVkYibYalDRNooclzz9JTRAJeWKDAWQ3KlHifEJ/u/RzyFBCm
q7EbfJsnpN4JlPC0PYs1ladyBDjSn51AQw0AMu77cn+gephEw/7LjUw+Oy0z
nogoxwyTYZ45Y4NhavBy7JjcIijs+LohaJPbD3l+k4nD29eu4OlIvu6RNFqw
MECqRYgDkK0wfLDbW1QhwMJ1wsAYWuGvuPPFuxXAvaZHz9UBfxT2LpuQs63n
M1saMmCYo9WFhx+Ec8RmXxcCILBOFyVwM9RlKik2X8UJpTi6KJNxOqabti3d
QLlIyG+g9FzAjoqRPqdZL7XsIQu0r5zvSz5LVvZFWI+xHNNMyZXLrlTvlszV
xob5o9XDSb4TEo7UAuAvx1KnjKJxcfdFeNwUMyjxkLlQ2uVkn2QxkGPFYEDs
UCiq5SE0ap5Sf98xkuFbkNKEs++DSQhIdnfVehY1IuxWAvmF1uA99rJQn7xe
ypMkg4QU5nc3IABJCxorreYsSktN8dUeIuydo5eKIEGtGe487s+VADyA1uO5
C+CUz+qtQV4LoctzkI0ewPOLbVUCsDG/6BMswptb1NJiNsck9m7JF4k63qro
RWhestRHELRuAEQm/9CJ8mblvIIugDTfIbHcmZJWE6V8oxa93ugK+oKZPRU3
TDco4D6BMIVNS+hYitQz1S5q5BwLoARpQHnEQRROtG9oy2pLvBQogTTJTodk
BlxOOSy4YGpZRBYpTyzrSvvU6m35JitEL8XlHQOVvLIMcMFUxpFvcYPgk11L
LjcQA6TvWljKKLjdHU6c0hQFJ1yZ7CRWC74Z0zfBf4nZTyh70glYounCjZvS
WD269HDhgmvakypiB5eyk7oy5gkAOi+4Sv9wU5tISdLcdeZsWpvceVzzbs1r
NlkbsmPLQZlkjSwSpr+I4RDthMMtlq7wcMhDwLdUhzVFtB9sjis55UU2x39E
DsE16mu1wGfkQBwlE1cWzMKRYooVkckJKSA+w4mekdwaDJjy4zsRl1hIG6Yy
NyVlqZ8D0fm6oB3QJqW6ZEwuNEihetkKmVJ280KNPzVLb+0oiJ5xYpscCk/M
QscMwbB12qHwg8dTrUjS/Ah1INXzowmFaMei5Q1OTxAGyvs8R6CEX/OkW2JL
QFGWVeiXCrMuIsUayuLFHQlAIxQx67K41PX7iCEs8J9kmJGcqIx4gU2Y73xh
6CJroILBYtdFhMPv5U0A6Y/0oKwc5BgDm5L3ynLaPQVPGOyghOoOJlZCpRkG
uSyS2ie+iYrACodQu8CtJCFW+C3SPgJ4vb6Soz6Gps4uYGO+wNjdgjeKGsmW
NoYyohqZQWYCtpR88ME3kX5amXrhrK7YGO6pHg6qzMAlqzqFeJweACxg6oQP
SVZH4jV+ugvkcW+FXOaFJiInqhOcKyBil9dyFaodxQRzFxd1SNQsIMIFp5ct
cFTHEM0qIiKCDCI+tUh+A6/1LsVn8GT5sT5rqhNCU65UXsKBRrkyzJO2TDNl
8PKq9ZYC95LPAHhlYUZowqinwtBB752uHIhUkg1siixmFjyI2UiBySIkwNTW
kIsblHwRDJ9UbMFurI0iF4A+O54XS90w5N0MySmOTrxNmmQwvvEopoav9T26
+zbhjVskAdiwoTgvUL7qhB0ots2xZdTvTLUeQp2YPprsukFUS3cc5RHSzWdK
sV3OJbAkReSEU9FXqzKfGO+Q5gNBFrWCYfqvyNACRPhrFVuqvWa0cStBP6mQ
qdaO5CTnqB/hmPB7Q9OxJap7IpVkqzN6vBhYCI3opeQkXtjQsMSk7tb1KWNQ
fN3NCF2Pq8I31m/I6O323twd6PaqMLb5ie6iiyK1DWM2rXSN1E8C2ktEtYNY
5QSoDvwPQlpAw7QYrGWg0fELJzRqFaY51PcJISi4r+bLLZioELTIultboUoV
wtka5fur5DquQRSvLx/aZrDCtNDm58oQSgVaKj9qiSxvIRyEGbZcSfl8vOaQ
LA9Iwj3VMzMhpEL30adNnlnme6WySKryKyHxGWTJRu53m/IipSxYAo0kOmwt
lRXoA7ezrbVY/+6CNAwQ3Cll2cBQ/az88b7Rxrwk4foERaCHCL86TByzQv4k
IN4UE+6OMC/SpLMS1hLjTc5Ol+hNGY6OJ6LTFLjWCxnR2ocj6Cct06aUbl9k
BfEyUQVBAQNgm4GCYk4l4Sn1JpMaCAsABhykpF6xgmneIsdXHFs0QLXv6mMX
gIDjM65ooil08pSy3kTk1BisCJwozqQjh2u8ozg76lqW64RHdSOKmSXA4rEj
ij4SEYP0Koq1si8hUbQ1k4r+COk8xaSE5Icw1kK6lRg/oiGvI0kepYVK3aN8
fESV5NM2pR6wkeLlFB6lkCaGXSnkvxkxA1SBhVbEAXKWdSZVB+74Alwtfkwt
DtQjFjvvNZ6FfTXpOUIN6leUpoYlNAqEFPD2jSo3/Cd41yS49AztHWci6kIS
QLi+ntGkCqniQyi/9iTSnRcnR00Rvsjysb8xYUytssxamYqgRt3EFhkda8zL
dHqHN7UPYcuX3k4/HmzFsrYYQaYL+H4aefxYwGzTp4ri4Hj3bC2/irgfj0nm
gba3S+ORam7TdTnUkxJqYATxrw5A3JQ8URQP27cOuIzIREtbUekL1hQjhoTe
MwxdkwmKFoBLVAPq7LUq3uBvff02NRAtlmS/HNv7ia8owYlJugZG1wNk/JYg
vVKYCIojxtUFkeyNiVLiPmuzPi1esb7vCVtALgqKZ7RCZyrus9UDnF0bl4pf
2kIiyQHuIildcoOEEsWhU/gU3NN1Q0q3di1QnpqRUV1YTVJQ3udKs+/Q2GRZ
EMyIspZZiSXtJaJT3QSirWYY2zx+sn0kAaECnzKaYY2f2PRrdfFgyyNbQCgu
Ef5kh8NNBTXIaqRz5UbNrgIMN4eMppCpJo324O4ooM1BT86YEW6Hs41uO4R3
A8jUahP118naA660gtPxE6NvwQZ+8Cl9nR7zFp2HO1TbOrsO6q74Btncqaxy
xSbCyT153izymXk3zdWkEgy2SG+pVDyw2ItWg5cms1iIxL7nNWXutgRRD4Fc
qvCGAi1H+qLe5AXxRjYWnbH8dqXYdVBSqo2aQt3EjCNbliaiKxktQcGRLTWj
1++nqSXhTAS3koR2iWO3IaFvBzBatqaUrnwDjTBkGZnURCh4O+/EZYO6UvBP
pT5uVEqpFa2BMSd9QeGxLeSJzQ/M14sy5bSjl+VPihEUbpU1Na0hJn0hUID/
d0ZSHC7PmtnoM4NjUSz365EICTisV0b2BvmCNyU0GQOQ8owjdNvwDqvlNkPw
tqUyTG2M+pIL66cBeWwg2stUuis1j1pShJlGiMilrtuCd1zoL6E4CcaRMysM
380PTvWqQmo42PEkm+6WD2v0xHFt6WyiDIwxb8rRm9JpNxIYBMcj4Cbac903
YagMAWYuiXu048ntn8LZH+2I6KibRSQk9WMe4dpUkMW1XcbwA+So/bJ4nVSd
VGadoynbtbbjz+Cz8iKWodEMkfRQnAILw1bysxzUNHusoTYcPrDitSXGyD1k
+WcwsUbXagONaFkSDeWVmuJ9kWKCvkgYCf/1xTQwYC7j5QGH4Bsoc9LrsWNm
TzLXSthJ5IG/eMtsVakKfZ/oUehfubLNc0rLhNOxo+btLhMqSTQP6JY3y4/Q
6lFDVDGYcxyiWyXdCuRKOp78tqnV1freegpO/rRRAdwDLraRp/Wjp3v2RGLW
jdTZJVpBErwOMtZtVyfbkfZYXBWI39Sno1mPRnBFPmZVnceczeiuFzWV8gf5
sydPD6GI+mqSDixlPexrAlEk74Cf1RWtq0xP6eM7gsAQLyMeRgtZN1p6jCk9
MabFKyaYameQeECbVR1oYSvpZVdRWe4UJS3++rEnrGvFdhTCS8LB4vGIGn6l
GcxiSNJBm0BGXNCMwlIaO1pKiG6FYjJwcKB93m1Os6/LYuNJ0FAVDbV0GjT6
o7S1ljeOdhqALjicqdVYRt9prbBQoczjbLPqmwQ8VGII2gLXGyF0XbpTIViY
a229SynLIC8JmkbUk+pc6mqk6eWaZO7TRGYTGx5rvFTcuylaCjhEQcqOKQ2r
xxpJiiP5i3ApiqGnOC/NG8JWJVvzRBgHyEefh1v/ldRss4OBwhaUkVmFJj+z
syel9qiVW5ZyJUrUqV65Urf2dmOOGxrt688G3xXzK9kk+Vhd3iPgq0y7qVAp
+jphz1M2GGl8smBtA9Do8r0NM3HlFu9nK31N/VLGtcOPWoT1tBe9wT6/ipZ6
+vRJpdnj15WpwNu7p1Ib0WuE5TO6Zcjwl+ysm+IjyrIWlrp4k2oKKdTRnmhx
InkJxZaS8gpYtVchbUExonCcAW2d6adBO9I6M/hfXmw/i1k1m7IabXM2CFt1
sMxld+uadQ3pr9s2w+GCKqmyfYa62EjfdSvHdmsJaYiTx4w65Sh5sRvhpcnd
HLT576ktsE3r5BYhi1MrTx6CdSlnuYrt6t3iwFL3jwrR7HrYNofCOuLrQrjQ
rCkDKuNcIUIidNsmgOlAwOTQRFkoBgmmoS76iSh+uwwhf7AFJN2ZqKLExjt4
hbLbFSERwdECx0sfU9IVS/MjBYQoO0JIQRzjVen1MhEI5xLafUnXm/7t9G+m
2ae73pK53XSCEJJCK+s3h6y5Uu47wsSni+KpdMsKSnK2cNAGhJNWgPQeK7TY
yot6BsVOnmuNyLLorynFGr0tNi9CuwTvNNymM0q5/jsWnFVidatCevETN9Nf
Q6IRP3w4KohqLPVnTkO4FrXksZ5A1YxiiJhNSHQsIg1lEU49eCeB6KRdwNRm
2Zh1NZitF4is9kmKdyRMv67qzujIwq1bArgWmF43Rl22I8aXhrgrrITUx7ei
c/ROFtidarE8/dC9UXNIxdEOM0WIMcxpI63IgcMxrH8amaFNlFIq3LPH09YV
ZNhKCXiW18MCUk+1+GVL75VVnhENBQWF3vi15SmMlvCTEuf3wkr8r0xNXgF0
UxhMoZQKGmZPnHWyo0rdIjHlKWk7AMgYzjIQAG1naInx1IGlyXynHz06lpRA
n4J2OxGuDSR5IoRdTEp4xkb15vqlZHURUKfDnmrHtiR+X3haSkl/K6Ma2sxM
CikMKZXd+olEmmMZc4dAQ8AT6pcKTJo3yoMRSxLMkpiZh7Vu+4aNAwOfoPus
BJniHqrslulnqrEnQjdby83577RQcXd6OZRohLzNkIksXRgJQk2NjGCfgoIy
cMSaxLAtn/wXDAOYzNmUn+1ZHVtWPMR+JGPLwPsUHgtqSQfSIksGioFn6kW3
6Si8vxJ3KhxOaJ8ZMcftymaaQVJFYcPpZk+H/E4URhTBz5WxWfq0QJLq7K8J
ES+VgkxzseZcFk1GcotjbSQFoL99xhTNeiVAStm5qEUoD96o0p2OcadkvNJq
3flmpRk7Y1qYYiky9vJMILL0zafDc9tdkIbIEMUqZkeLSW0cjIAsGuvIwp5M
ZatdKTeeH21gM5OkaCZxdJeO3QU9ZyEDTnwXpnYQl9IWFVkyySVNID1Nifhg
Y7oNUjyqTx39Rapzqi0tMBEQpznXHkoZ7wtXuDuvUsoFG/OW3PWwrSc9pbM5
6lxaSmJIxEPabWsDRKKi/LJKPb7GXbWQ3TSMQFygdLrjPWMF0ogeIUrrWKRH
FXS8zF/qORkq/yJXvda5I1RND1YcZzCfSrMVYXKXmDzLKwwfthA3PMPGBDyP
Jl94IAWyJ2106VmOSaTLLrlhujaW4wWSNCmCUp1Tu8ifLHbOTkZXZGbPHhO4
UgdYnejMRqCjm+5Uh5m9DdQkBK0XHURrSjNNxNbEMNtJxP5Kiq9+fdONe61K
4ReH6XkDTwUst0sS5OXO2In6/KbGOdsZEKFbSWKTQiBZmMRfCIHn1+Ot3AFU
tG6GkTx7ohhYhveHJwrH0q1X2/aeEx2Fs45kxFTtRFzdo6RsM0jZI81h3Srt
Ec+RaTWTPaHqmYUO6+Wg+7QvDW5JQlEkv5UC7HOSVfxLTpyijwN5iK1AmqLF
noJ0ue60hO/rNKMdeG7r405lOWE+U5wy7mtZ18qADOm6a0fMcaTPDG8qmS1p
EKFSt6h03thnzMlWIwNPsPX4YuP5xN2MtEwWuPRwW5qMVu85K8vBLTMFykza
6hZkHNsGe88ROdmKzAXeYUh3n5+y4trnPdNDXouWCpXVxCORv1porPYE9nrP
EDaybjPjqcxkbyQBFpmniqqVRC7BLeYqLr5hwW+q+eoIM4gMRFfipAg93vob
iKKrjNoxaVI3m1uElxlPNejXLhX40+0JBLfImbqbU/Yo2UTi9MigKCFnUFfK
FycdArRfdo+4ha2joHga94YztTrHcwbL6/FiwoqMxghT0GMRbBmzCrGSfS7T
SLWy91qghnd+M3z30mxTEspEvkziyJC5qFN6fEWCIzBrRC3QM86MRGg15SDG
6Yby9lj+kKkthRwtHJ6VDiqNI149WlRMWl3dyECNDIiKNs1JHVNYPmTmes0c
s8AjXdS/40aG4FgS5bgAnrR02XCzooE9CgKZkHaUno+UHf+KjKYtI2UG1/ZK
OXtyB1sM6uxobeu2kEwmV7/TI1S0oZSEZzcS4lZDh6U3U+rpSI91JfuGwLGG
nppbIHFUAek0y+A6Jy2tVKQzrCNNV44AQ+N0VDKs8ZvnsdRN6CQzEDNNBgbD
kflg3UnuWMkEKQUF2JPkN/yEcU1hUE97C7SeDWc0TysO5nY3PN8JZYOA94QV
k259XQxWa2jxeMUT2QQyLf8BK+ftwQWZO5IaWFrkk8skNclkqBTzM/ow0yvb
36u8tk1/tKQDjvLnilJOp2xDtkGdGRvqTt0fnqDUYBa5slpkBKMlY3bqqtPf
GQJlef9kSJWMguMRSuE27I60c0ItgL0UUjBnR1eZbupc2haqn1zU3oeIslvV
IE0Yd0jxz5YTWwV3uoNLFKoTSJZ1/IbTVV4O4/T+AYM2yEj4ML8Hz5b5Dmhd
X8BQesdbHKdNITOFuhoc7B0EREVMQiggTrJpJw6xQ/EVdd7l4OX+e5Rb2jfB
HSMDElOARd+ARvrYJsnEuqGKP1rpn/SOgC1Dnm5qT1qP3En/u72SLzLQYyjb
HRKc1aJw76hUjNg5+siUQEf6CUyTI0hQtDMSOzK+pCeN2LURpVJrTswNX5pZ
zdcClFJOD88eSV20yyZII93+PXEwR0WFcUseLKRmFBtBPor1nfxt2ByEUGLa
Hr+sFUPMAhN6aIOylKDgVOOzIElQDUztNVLezuwpSZWbJtech/RGdFO8NMgU
jsqi7V+FkMJBlErpi1SAOXuGMKfJWiXODY5FgQ5cw1w2hfXEl9sN/pxZC0E3
w6PSABX+Lu0IghLyVooR2rbBA47k/rqFHRUWA1NzN3qKnD4M7F4zQsQQTroI
fR3kMayGOAhgZjadHXQ1v85+2qFMKQQR/qWH3XSZm7Ei3Uhimpi6fQ8IM+xI
3q10WDTNa58NC4duBIeRT0oeofal3qv2CKcuvB62FF7jR5eUI/6PAjOjaOJm
hsKrnlb0nKDqYJpoQztNsmXlJpIvRWVoJq3mEpPOszNl7YyRczjySkvFiM4t
R8OmBtmHDNqkbWbsaFzeDp+SltlgMOPzjEb66H+VgKS7KSNKToYQ/uDoSYs1
SbaF3HQOdbYrhJxqeyxWqys0c0KnrexQwP0cdhCs34N7aEDpEigdVKvjmL0p
J+KNdNI5/iMTXiKKbg7eEdf7JybF4/IjYXFNsPKaR4WMPvxGYxulWhhMJRlj
pjd0ZayApaz4JV2RguTdw6ZHt2ZxXwfvtM5G+JsyoMMy+9IOfDlhjcRCJy4h
o8AyxcIGi9Pd4/Yvtvo7XZJ25jv648UJOO05AwtmuvlS6sukkJFuPFOG8ZtV
/oKSTtrcOO/wJdaq4lCC7gVkL0cl3bQ5VdMhW5FwqXTZwrrTunTTFhXPMxN0
Qy82cuyIYyGuqx9ih3RJRnYprM98ozDalg278WC/Hx2K1IlsOcUTdb0vnRnd
1NlyD+BQ6vvntUgb45A3CLMQdd9QEx6JhVJZW3Qp/CR2EigcxfTrsA+rSGAN
N55i2zVnTEWsU6H5G31YJ9LxTUNWOJOYPH4zOg/bYUfU9OSSa0ROykKIzuhv
pJITKWsaxYbK9uT2zQJEXuQcfnsCT8YaWzG/mSf3G/mIS49UPuT7s5890Cgd
nktiKqVQO5CY5AhlQsXjxVDTzqCYwzGez/LKzez18IMS+DcdhpJbO81hycEy
75Bzg1lw/I7DdQSgCSG2v7+IsiIez8xiy7cnEwSSF6UokXEzSj3svyENgLOn
prUydzLTajNeZSZJdUBRV9asbLb6zSx+OMPWQYgWhZr+2KmW8dXjZ9ZvVvxy
Eo/1laiZRurNBsRW2SlczbDHEMlyuUfLWBHmpLkH0YxOyqWzidPR7yI0+cSl
CZ6R/Q9EsX3FBl+1cns4QrGn1qQOsRwj5cyNaedAmqJmWPc0TPTYsUwAM3qb
TS4bRp3mq3IM2yLotOe7FBVsI5zDPEk5U/65h2XI2fHGwyOQUck2ep7o/2ZX
jt/v30i4zZGltckGyp1pNYphXpY8bR5LNXjn/fm3EDI8NP/oggOpMsQpc8WW
Zh7hfibO318677g5VFGtiicMOsPvdsof7V0mOeT9bCFtUeEe+Sc3QrW9JHSk
7vKYSZPkIXdI5oiWI61Ieab/zQyHB1NaYBoCY75HZghZw7Z1tbPBDAMybRmh
Ne3bzcg58Ih8DgXA49BTxb0pzvrGDZrN+AKsQxJl0ki6X5wYf+PrdhrkrO90
Q/lTvuqYxQismnFy4kj43UybtEQ7AXtHLLsjXpyZRu8J8h/C+IkPh1MchnNu
ukfFgUNpoP2/Rsrie5TOaR8vLS5RFKiM3yEbu69cFNO1CclSi9W2OiPIGr8E
d+yeZjJ/Tbv6jNvOYbUm0X86JQ09TcMoK8rU5xb16nEzQjMjB3KYe3aRWUw6
yVuinVFGK1GcgBmnl3qHGo1h39iNwCqjQl6Ph7dOD5Hy/gfftp33
        "], $CellContext`bogosort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBogo, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 520], $CellContext`randomize[
         Pattern[$CellContext`n1$, 
          Blank[]]] := 
       Module[{$CellContext`n$ = $CellContext`n1$}, 
         Clear[$CellContext`Quicksort, $CellContext`li, 
           FE`sort$$24, $CellContext`liQuick, $CellContext`lessArr, \
$CellContext`greaterArr, $CellContext`equalArr, $CellContext`pivot1, \
$CellContext`arr, $CellContext`array1, $CellContext`quicksortRun, \
$CellContext`i, $CellContext`j, $CellContext`liBubble, $CellContext`liInsert, \
$CellContext`liCocktail, $CellContext`liBubble, $CellContext`liShell, \
$CellContext`arr, $CellContext`array1, $CellContext`array2, \
$CellContext`value, $CellContext`swapped, $CellContext`temp, \
$CellContext`li1]; $CellContext`li1 = RandomSample[
            
            Range[$CellContext`n$]]; $CellContext`liInsert = {}; \
$CellContext`liInsert = 
          Append[$CellContext`liInsert, $CellContext`li1]; \
$CellContext`liShell = {}; $CellContext`liShell = 
          Append[$CellContext`liShell, $CellContext`li1]; \
$CellContext`liBubble = {}; $CellContext`liBubble = 
          Append[$CellContext`liBubble, $CellContext`li1]; \
$CellContext`liCocktail = {}; $CellContext`liCocktail = 
          Append[$CellContext`liCocktail, $CellContext`li1]; \
$CellContext`ISort[
           Part[$CellContext`liInsert, 1]]; $CellContext`CSort[
           Part[$CellContext`liCocktail, 1]]; $CellContext`BuSort[
           Part[$CellContext`liBubble, 1]]; $CellContext`SSort[
           Part[$CellContext`liShell, 1]]; Null], 
       Attributes[$CellContext`n1$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`li = {13, 7, 
        11, 8, 1, 5, 20, 12, 14, 17, 9, 6, 19, 18, 10, 16, 2, 4, 3, 15}, 
       FE`sort$$24 = "cocktail", $CellContext`i = 0, $CellContext`j = 
       14, $CellContext`value = 15, $CellContext`swapped := 
       False, $CellContext`temp = 
       4, $CellContext`li1 = {2, 10, 6, 7, 8, 1, 3, 5, 9, 
        4}, $CellContext`ISort[
         Pattern[$CellContext`array1, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array1}, 
         For[$CellContext`i = 2, $CellContext`i <= Length[$CellContext`arr], 
           
           Increment[$CellContext`i], $CellContext`value = 
            Part[$CellContext`arr, $CellContext`i]; $CellContext`j = \
$CellContext`i - 1; While[
             
             And[$CellContext`j >= 1, 
              Part[$CellContext`arr, $CellContext`j] > $CellContext`value], 
             Part[$CellContext`arr, $CellContext`j + 1] = 
              Part[$CellContext`arr, $CellContext`j]; 
             Decrement[$CellContext`j]; Null]; 
           Part[$CellContext`arr, $CellContext`j + 
              1] = $CellContext`value; $CellContext`liInsert = 
            Append[$CellContext`liInsert, $CellContext`arr]]; \
$CellContext`arr], $CellContext`CSort[
         Pattern[$CellContext`array2, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array2, $CellContext`swapped = 
          True}, While[$CellContext`swapped == 
           True, $CellContext`swapped := False; 
           For[$CellContext`i = 1, $CellContext`i < 
             Length[$CellContext`arr] - 1, 
             Increment[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           If[$CellContext`swapped == False, 
             Break[]]; $CellContext`swapped := False; 
           For[$CellContext`i = Length[$CellContext`arr] - 1, $CellContext`i > 
             0, 
             Decrement[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped := 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           Null]; $CellContext`arr], $CellContext`BuSort[
         Pattern[$CellContext`array5, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array5, $CellContext`swapped = 
          False, $CellContext`n = Length[$CellContext`array5]}, Do[
           If[
           Part[$CellContext`arr, $CellContext`i] > 
            Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
             Part[$CellContext`arr, $CellContext`i]; 
            Part[$CellContext`arr, $CellContext`i] = 
             Part[$CellContext`arr, $CellContext`i + 1]; 
            Part[$CellContext`arr, $CellContext`i + 
               1] = $CellContext`temp; $CellContext`swapped = 
             True; $CellContext`liBubble = 
             Append[$CellContext`liBubble, $CellContext`arr]; 
            Null], {$CellContext`i, 1, $CellContext`n - 1}]; 
         While[$CellContext`swapped == True, $CellContext`swapped = False; Do[
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liBubble = 
               Append[$CellContext`liBubble, $CellContext`arr]; 
              Null], {$CellContext`i, 1, $CellContext`n - 
              1}]]; $CellContext`arr], $CellContext`SSort[
         Pattern[$CellContext`lst, 
          Blank[]]] := 
       Module[{$CellContext`list = $CellContext`lst, $CellContext`incr, \
$CellContext`temp, $CellContext`i, $CellContext`j}, $CellContext`incr = 
          Round[Length[$CellContext`list]/2]; 
         While[$CellContext`incr > 0, 
           For[$CellContext`i = $CellContext`incr + 1, $CellContext`i < 
             Length[$CellContext`list] + 1, 
             
             Increment[$CellContext`i], $CellContext`temp = 
              Part[$CellContext`list, $CellContext`i]; $CellContext`j = \
$CellContext`i; While[
               
               And[$CellContext`j >= $CellContext`incr + 1, 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr] > \
$CellContext`temp], 
               Part[$CellContext`list, $CellContext`j] = 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr]; \
$CellContext`j = $CellContext`j - $CellContext`incr; Null]; 
             Part[$CellContext`list, $CellContext`j] = $CellContext`temp; \
$CellContext`liShell = Append[$CellContext`liShell, $CellContext`list]; Null]; 
           If[$CellContext`incr == 2, $CellContext`incr = 
             1, $CellContext`incr = 
             Round[$CellContext`incr/2.2]]]; $CellContext`list]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->971243464],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`elements$$ = 47, $CellContext`sort$$ = 
    "insertionsort", $CellContext`step$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`elements$$], 47, 
       "elements\n(set, then click \"randomize\")"}, 10, 150, 1}, {{
       Hold[$CellContext`step$$], 1}, 1, 
      Dynamic[
       Which[$CellContext`sort$$ == "shellsort", 
        Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
        Length[$CellContext`liBubble], $CellContext`sort$$ == "insertionsort", 
        Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
        Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
        Length[$CellContext`liBogo]]], 1}, {{
       Hold[$CellContext`sort$$], "insertionsort"}, {
      "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[20], 
         Button[
         "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    575., {197., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`elements$42565$$ = 
    0, $CellContext`step$42566$$ = 0, $CellContext`sort$42567$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`elements$$ = 47, $CellContext`sort$$ = 
        "insertionsort", $CellContext`step$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`elements$$, $CellContext`elements$42565$$, 0], 
        Hold[$CellContext`step$$, $CellContext`step$42566$$, 0], 
        Hold[$CellContext`sort$$, $CellContext`sort$42567$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Pane[
        Which[$CellContext`sort$$ == "shellsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liShell], $CellContext`step$$ = 
           1]; $CellContext`shellsort[$CellContext`step$$], \
$CellContext`sort$$ == "bubblesort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBubble], $CellContext`step$$ = 
           1]; $CellContext`bubblesort[$CellContext`step$$], \
$CellContext`sort$$ == "insertionsort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liInsert], $CellContext`step$$ = 
           1]; $CellContext`insertionsort[$CellContext`step$$], \
$CellContext`sort$$ == "cocktail", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liCocktail], $CellContext`step$$ = 
           1]; $CellContext`cocktail[$CellContext`step$$], \
$CellContext`sort$$ == "bogosort", 
         If[$CellContext`step$$ > 
           Length[$CellContext`liBogo], $CellContext`step$$ = 
           1]; $CellContext`bogosort[$CellContext`step$$]], Alignment -> 
        Center, ImageSize -> {575, 400}], 
      "Specifications" :> {{{$CellContext`elements$$, 47, 
          "elements\n(set, then click \"randomize\")"}, 10, 150, 1, 
         Appearance -> "Labeled"}, {{$CellContext`step$$, 1}, 1, 
         Dynamic[
          Which[$CellContext`sort$$ == "shellsort", 
           Length[$CellContext`liShell], $CellContext`sort$$ == "bubblesort", 
           Length[$CellContext`liBubble], $CellContext`sort$$ == 
           "insertionsort", 
           Length[$CellContext`liInsert], $CellContext`sort$$ == "cocktail", 
           Length[$CellContext`liCocktail], $CellContext`sort$$ == "bogosort", 
           Length[$CellContext`liBogo]]], 1, Appearance -> "Labeled", 
         ControlType -> Animator, AnimationRunning -> 
         False}, {{$CellContext`sort$$, "insertionsort"}, {
         "shellsort", "bubblesort", "insertionsort", "cocktail", "bogosort"}, 
         ControlType -> SetterBar, ControlPlacement -> 1}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[20], 
          Button[
          "randomize", $CellContext`randomize[$CellContext`elements$$]; \
$CellContext`step$$ = 2; $CellContext`step$$ = 1, ImageSize -> Automatic]}]}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`elements$$, $CellContext`step$$, \
$CellContext`sort$$}}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{618., {274., 279.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`liShell = CompressedData["
1:eJzFy7sNwyAUQFHMHx6Y8Fkgk2SHjOAFsn8XXgMSToFiJRS3OdK9H6/nQQkh
j1qpeQV6E8Xt0cic7I1yFkwz3002U7812qx0481cN9Zs7xaaRYFmBqNocjCO
BoMxNL3KLFr42hxaHmxHSx+NUzFlW33Ff8xqmDAlTX3hbA78Qku5nC2WPG+M
XzKpZk2bSwZupcU0a7m8AarvNao=
        "], $CellContext`shellsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liShell, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBubble = CompressedData["
1:eJx1yLlxwzAQQFFxF8QNEMc24JZcghpw/5mVeDRDfwUveV/Pn++nPB6P54u9
tFDicVrtM/m98hCnV2hwpcHFBnc0uLPRVYPrBjcNLhmcN7htcMvgssENgxOD
cwanBndZiAXuKHBnoasNL004P+nWhssbbmw42XBuw+mGu7aFI8Kd8cOlDuc7
Xl5wY8HJgnMLThfctbYdAe4MHy41ON/w8oQbE04mnJtwOuGu+XepwvmKlzud
DDg34HTAXePvUoHzBS83OulwrsNpf59PeLnSSYNzDU7b+3zEy4VOKpyrcFrf
58OHkwLnCpyW20mGcxlO8+0kwbkEp+l2EuFchNN4OwlwLsBpuJ14OOfh1N9O
Tjh3wun579Td7xfIz1KD
        "], $CellContext`bubblesort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBubble, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liInsert = CompressedData["
1:eJyNyLkRgCAQAEBEBBGP9xqwJUuwAfvPHPAZPAkMNtll29eNM8bwAsqM3YCz
DVqmOHkueqegcQa+Nxqg1+WkN+T8eTNg4yw2LuD79JnVyScbl/B7MWF90530
fM5ynGQ5QTJfT5OcK3kAu9sSOQ==
        "], $CellContext`insertionsort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liInsert, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liCocktail = CompressedData["
1:eJx1yLlhwzAQBEDx7vADJL4G3JJLUAPuP7MjB9hVMMl8vX++3/J6vd5/9p8W
SrzcrvdIfs3cxfQJjVxp5GIjdzVyrrGrm9y9yY1NLm1yfpNbm9zc5PIm1zc5
2eRsk9NN7tnnqZ0nHU4ynEw4WXDi4STByYCTG04qnDQ4ceddEe4qcFdgFws5
KeRcYVcbvTTI+cFuLnJ5keuLnC5ytsg96zjtcJrhdMLpgFMPpwlObzhtcFrh
tMCpO08inAR2Gsm5+OHSTc7f9PIk1yc5m+SeeZ51OMtwNuDshjMPZwnOGpxV
OCtwFuHMnaeBnAVyLny41Mj5Ri8Pcn2Qewbc08/LN1xu5/kE5yucL3A+wvnA
L1VyuZ6XCrlc/u8XwoZSgw==
        "], $CellContext`cocktail[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liCocktail, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 
         520], $CellContext`liBogo = CompressedData["
1:eJxNnduhXMsJRNXvP+fglByCE3BujtCbtYqRf+6VzpnZj24aiqJA//z3f/71
7/nnz5///uPPn/f9f6593h33jO9P777637nrvDn2+n663/x+//1w1E++39y3
zh6z/jvHnWeNfb/P7DveemevMfnEHfWr75v7+/35Pv79pP73/W19/z/eaT1+
u853pf2+J1nfNb9P1Efvd7mxZ/1lz/fW5f/f9b6H+K799rjfH75n+h6MO36X
+C7AM+03vl99d/metK6zvwdc9YTfL79bfnf6nm/xdN9T3u/zZ9Z3zp11zfN9
4vvwPPfu8734qkeZu15s+h71Gt/fDw/w3el7qfE90vwe6XvEep1vCfeodfou
cWr16kXqjqvW8rtRvfV3ibfrrmPV9b9n+9by+8F3i29t7ru1nt/rfN+c3283
L1yfPt+CzFqRvOD3yVM//vbk26H68Krdmt/Vvw+x2KzAt5DfW43a6lWvxLt+
m/o987cX33J915r1gt+tVq3eO4dl2/Xe30rUPp8s+3enzd6V9TzW4/vG+n6+
Wa96zVXf/f5wXO31LVFd4PvPtyXTG45a6W/5NZP5Pfn7Xvb70aw1xTjYocsC
ftf4PvA9Qy3Gq0WrxbqD9/yu9F3tliltNmGX4ZQpzlrM7/Gw9s0Ha6e+Bxx1
p5ebcOnaHI4FnzyzLlrXXPX376N18zKR73/1VGVgZRhr9EGoh6yXL0v57Lk2
84wy5rLbz8TrHmUO37LWfqxRt+NKtZ/fgbi+Im/Bsfn2t5Z1YDWzVvoz+zLc
yVPVK162p56ulmLW89Yy1/thk2/xAJ+h39qc76xc9mb1jb4rHnexTjFL/q3K
KMNb9XqfefL0n8Eutqu+9j00z1XfLLv8nq3eZmIi9dF6peW+nVWLXtbxvd93
ye/n38PxzXIJtX5l0N9V6qh9n6mDdubNa81ak+/Jymi/tz213YOL1DFlaW8/
TO0n/qR8mFdvX1CHf9Wyv3qmOjXXjS+LKoMZ5QU02sGZ/m79PUidvNqUWjLs
89v/jTOMI6jD/C33PZzUOgm3rusDlRXesoNyTfXCHMHnXl+c67dKLD3PXK7y
e7X6TgzfffnufstCORjflWPCvLumFU9UJ/niLd/wmevE4ap2uaVTx4j14TB8
S1iHcdYxqJ+VxZdTrOX/Nuv4fnWNkb+Upys/w93qCWoR7jUyHOyJjauP37JX
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
        "], $CellContext`bogosort[
         Pattern[$CellContext`step, 
          Blank[]]] := BarChart[
         Part[$CellContext`liBogo, $CellContext`step], ChartStyle -> 
         "DarkRainbow", ImageSize -> 520], $CellContext`randomize[
         Pattern[$CellContext`n1$, 
          Blank[]]] := 
       Module[{$CellContext`n$ = $CellContext`n1$}, 
         Clear[$CellContext`Quicksort, $CellContext`li, 
           FE`sort$$24, $CellContext`liQuick, $CellContext`lessArr, \
$CellContext`greaterArr, $CellContext`equalArr, $CellContext`pivot1, \
$CellContext`arr, $CellContext`array1, $CellContext`quicksortRun, \
$CellContext`i, $CellContext`j, $CellContext`liBubble, $CellContext`liInsert, \
$CellContext`liCocktail, $CellContext`liBubble, $CellContext`liShell, \
$CellContext`arr, $CellContext`array1, $CellContext`array2, \
$CellContext`value, $CellContext`swapped, $CellContext`temp, \
$CellContext`li1]; $CellContext`li1 = RandomSample[
            
            Range[$CellContext`n$]]; $CellContext`liInsert = {}; \
$CellContext`liInsert = 
          Append[$CellContext`liInsert, $CellContext`li1]; \
$CellContext`liShell = {}; $CellContext`liShell = 
          Append[$CellContext`liShell, $CellContext`li1]; \
$CellContext`liBubble = {}; $CellContext`liBubble = 
          Append[$CellContext`liBubble, $CellContext`li1]; \
$CellContext`liCocktail = {}; $CellContext`liCocktail = 
          Append[$CellContext`liCocktail, $CellContext`li1]; \
$CellContext`ISort[
           Part[$CellContext`liInsert, 1]]; $CellContext`CSort[
           Part[$CellContext`liCocktail, 1]]; $CellContext`BuSort[
           Part[$CellContext`liBubble, 1]]; $CellContext`SSort[
           Part[$CellContext`liShell, 1]]; Null], 
       Attributes[$CellContext`n1$] = {Temporary}, 
       Attributes[$CellContext`n$] = {Temporary}, $CellContext`li = {13, 7, 
        11, 8, 1, 5, 20, 12, 14, 17, 9, 6, 19, 18, 10, 16, 2, 4, 3, 15}, 
       FE`sort$$24 = "cocktail", $CellContext`i = 0, $CellContext`j = 
       14, $CellContext`value = 15, $CellContext`swapped := 
       False, $CellContext`temp = 
       4, $CellContext`li1 = {2, 10, 6, 7, 8, 1, 3, 5, 9, 
        4}, $CellContext`ISort[
         Pattern[$CellContext`array1, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array1}, 
         For[$CellContext`i = 2, $CellContext`i <= Length[$CellContext`arr], 
           
           Increment[$CellContext`i], $CellContext`value = 
            Part[$CellContext`arr, $CellContext`i]; $CellContext`j = \
$CellContext`i - 1; While[
             
             And[$CellContext`j >= 1, 
              Part[$CellContext`arr, $CellContext`j] > $CellContext`value], 
             Part[$CellContext`arr, $CellContext`j + 1] = 
              Part[$CellContext`arr, $CellContext`j]; 
             Decrement[$CellContext`j]; Null]; 
           Part[$CellContext`arr, $CellContext`j + 
              1] = $CellContext`value; $CellContext`liInsert = 
            Append[$CellContext`liInsert, $CellContext`arr]]; \
$CellContext`arr], $CellContext`CSort[
         Pattern[$CellContext`array2, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array2, $CellContext`swapped = 
          True}, While[$CellContext`swapped == 
           True, $CellContext`swapped := False; 
           For[$CellContext`i = 1, $CellContext`i < 
             Length[$CellContext`arr] - 1, 
             Increment[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           If[$CellContext`swapped == False, 
             Break[]]; $CellContext`swapped := False; 
           For[$CellContext`i = Length[$CellContext`arr] - 1, $CellContext`i > 
             0, 
             Decrement[$CellContext`i], 
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped := 
               True; $CellContext`liCocktail = 
               Append[$CellContext`liCocktail, $CellContext`arr]; Null]]; 
           Null]; $CellContext`arr], $CellContext`BuSort[
         Pattern[$CellContext`array5, 
          Blank[]]] := 
       Module[{$CellContext`arr = $CellContext`array5, $CellContext`swapped = 
          False, $CellContext`n = Length[$CellContext`array5]}, Do[
           If[
           Part[$CellContext`arr, $CellContext`i] > 
            Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
             Part[$CellContext`arr, $CellContext`i]; 
            Part[$CellContext`arr, $CellContext`i] = 
             Part[$CellContext`arr, $CellContext`i + 1]; 
            Part[$CellContext`arr, $CellContext`i + 
               1] = $CellContext`temp; $CellContext`swapped = 
             True; $CellContext`liBubble = 
             Append[$CellContext`liBubble, $CellContext`arr]; 
            Null], {$CellContext`i, 1, $CellContext`n - 1}]; 
         While[$CellContext`swapped == True, $CellContext`swapped = False; Do[
             If[
             Part[$CellContext`arr, $CellContext`i] > 
              Part[$CellContext`arr, $CellContext`i + 1], $CellContext`temp = 
               Part[$CellContext`arr, $CellContext`i]; 
              Part[$CellContext`arr, $CellContext`i] = 
               Part[$CellContext`arr, $CellContext`i + 1]; 
              Part[$CellContext`arr, $CellContext`i + 
                 1] = $CellContext`temp; $CellContext`swapped = 
               True; $CellContext`liBubble = 
               Append[$CellContext`liBubble, $CellContext`arr]; 
              Null], {$CellContext`i, 1, $CellContext`n - 
              1}]]; $CellContext`arr], $CellContext`SSort[
         Pattern[$CellContext`lst, 
          Blank[]]] := 
       Module[{$CellContext`list = $CellContext`lst, $CellContext`incr, \
$CellContext`temp, $CellContext`i, $CellContext`j}, $CellContext`incr = 
          Round[Length[$CellContext`list]/2]; 
         While[$CellContext`incr > 0, 
           For[$CellContext`i = $CellContext`incr + 1, $CellContext`i < 
             Length[$CellContext`list] + 1, 
             
             Increment[$CellContext`i], $CellContext`temp = 
              Part[$CellContext`list, $CellContext`i]; $CellContext`j = \
$CellContext`i; While[
               
               And[$CellContext`j >= $CellContext`incr + 1, 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr] > \
$CellContext`temp], 
               Part[$CellContext`list, $CellContext`j] = 
                Part[$CellContext`list, $CellContext`j - $CellContext`incr]; \
$CellContext`j = $CellContext`j - $CellContext`incr; Null]; 
             Part[$CellContext`list, $CellContext`j] = $CellContext`temp; \
$CellContext`liShell = Append[$CellContext`liShell, $CellContext`list]; Null]; 
           If[$CellContext`incr == 2, $CellContext`incr = 
             1, $CellContext`incr = 
             Round[$CellContext`incr/2.2]]]; $CellContext`list]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->665698601]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
Shell sort is an algorithm that splits the list into smaller sublists. The \
mechanism sorts each of the individual groups, which creates a slightly more \
ordered list. Then, the algorithm uses an insertion sort to quickly order the \
elements. This is an efficient sorting algorithm.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
  3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
  3.6737815625185437`*^9}, {3.674402569076659*^9, 3.674402575834889*^9}},
 CellID->140430483],

Cell["\<\
The bubble sort method works by comparing the first two values of the list. \
If the first value is greater than the second value, they switch; otherwise \
they stay as they were. In either case, the current second value is then \
compared with the next value, and so on.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
  3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
  3.673781564585784*^9}, {3.674402623681807*^9, 3.6744027555176573`*^9}},
 CellID->27248625],

Cell["\<\
Insertion sort takes each element one by one from an input list and inserts \
it into its correct spot in a new output list (often put right before or \
after the input list). This method is efficient for short lists or for lists \
that are mostly sorted.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
  3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
  3.6737815657870073`*^9}, {3.6744030708783913`*^9, 3.6744031726559553`*^9}},
 CellID->238474517],

Cell["\<\
Cocktail sort is similar to bubble sort in the way that it compares two \
elements of the list at a time, but sorts both ways. The elements are moved \
back and forth according to whether they are smaller or larger. So it sorts \
from the left and the right to meet up in the middle.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
  3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
  3.673781567208635*^9}, {3.674403203678398*^9, 3.674403277388467*^9}, {
  3.674488761015573*^9, 3.674488763365695*^9}},
 CellID->51758367],

Cell["\<\
Bogosort is the most inefficient. The algorithm works by randomizing the \
order of the list until eventually the elements are placed in the perfect \
order. This sort could go on for a very long time or take two steps. Based on \
the randomness of this sort, we created a constant number of seven elements \
to avoid a computer system crash.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
   3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
   3.673781568880867*^9}, 3.673781671135461*^9, {3.674403294523294*^9, 
   3.674403341564724*^9}, {3.674488771623332*^9, 3.6744887804768763`*^9}, {
   3.6744899408678293`*^9, 3.674489942800593*^9}},
 CellID->171160818],

Cell["\<\
You can randomize the values in the list, but not the number of elements.\
\>", "DetailNotes",
 CellChangeTimes->{{3.673343835218835*^9, 3.6733438545040445`*^9}, {
   3.6733439644678836`*^9, 3.673343965057826*^9}, {3.6737815572718425`*^9, 
   3.673781568880867*^9}, 3.673781671135461*^9, {3.674403294523294*^9, 
   3.6744033415615683`*^9}},
 CellID->2137403938],

Cell["References", "DetailNotes",
 CellChangeTimes->{{3.6737816831994934`*^9, 3.673781684729724*^9}},
 CellID->364683713],

Cell[TextData[{
 "[1] V. S. Adamchik. \"Sorting.\" (Jun 9 2016) ",
 ButtonBox["www.cs.cmu.edu/~adamchik/15-121/lectures/Sorting%20 \
Algorithms/sorting.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.cs.cmu.edu/~adamchik/15-121/lectures/Sorting%\
20Algorithms/sorting.html"], None},
  ButtonNote->
   "https://www.cs.cmu.edu/~adamchik/15-121/lectures/Sorting%20Algorithms/\
sorting.html"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.673173045712885*^9, 3.673173055993913*^9}, {
   3.673173386735881*^9, 3.6731733867368813`*^9}, 3.6731735101182184`*^9, {
   3.6731743632025185`*^9, 3.673174366348833*^9}, {3.673781688288593*^9, 
   3.6737816891018085`*^9}, {3.674488805454247*^9, 3.674488814048924*^9}, {
   3.674488871604444*^9, 3.6744889120557117`*^9}},
 CellID->55791791],

Cell[TextData[{
 "[2] Saylor Academy. \"Sorting Algorithm.\" (Jun 9, 2016) ",
 ButtonBox["www.saylor.org/site/wp-content/uploads/2011/06/Sorting-Algorithm.\
pdf",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.saylor.org/site/wp-content/uploads/2011/06/Sorting-\
Algorithm.pdf"], None},
  ButtonNote->
   "http://www.saylor.org/site/wp-content/uploads/2011/06/Sorting-Algorithm.\
pdf"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.673173045712885*^9, 3.673173055993913*^9}, {
   3.673173386735881*^9, 3.6731733867368813`*^9}, 3.6731735101182184`*^9, {
   3.6731743632025185`*^9, 3.673174367427941*^9}, {3.673781691878662*^9, 
   3.6737816925338745`*^9}, {3.6744890743533163`*^9, 3.674489076758739*^9}, {
   3.674489157929246*^9, 3.674489172936708*^9}, {3.674489221818245*^9, 
   3.67448924103404*^9}},
 CellID->190478222],

Cell[TextData[{
 "[3] V. Bohush. ",
 StyleBox["Visualization and Comparison of Sorting Algorithms",
  FontSlant->"Italic"],
 " [Video]. (Jun 9, 2016) ",
 ButtonBox["www.youtube.com/watch?v=ZZuD6iUe3Pc",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.youtube.com/watch?v=ZZuD6iUe3Pc"], None},
  ButtonNote->"https://www.youtube.com/watch?v=ZZuD6iUe3Pc"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.673173045712885*^9, 3.673173055993913*^9}, {
  3.673173386735881*^9, 3.673173387592967*^9}, {3.673259096690336*^9, 
  3.6732590966913357`*^9}, {3.67378169489152*^9, 3.6737816958899393`*^9}, {
  3.674489247593244*^9, 3.6744892525976267`*^9}, {3.674489304606763*^9, 
  3.674489348181357*^9}},
 CellID->9534321],

Cell[TextData[{
 "[4] OJ Reeves. \"Sorting Algorithms: The Cocktail Sort,\" ",
 StyleBox["OJ's Perspective",
  FontSlant->"Italic"],
 " (blog). (Jun 9, 2016) ",
 ButtonBox["buffered.io/posts/sorting-algorithms-the-cocktail-sort",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://buffered.io/posts/sorting-algorithms-the-cocktail-sort/"], 
    None},
  ButtonNote->
   "http://buffered.io/posts/sorting-algorithms-the-cocktail-sort/"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.673173045712885*^9, 3.673173055993913*^9}, {
  3.673173386735881*^9, 3.673173387592967*^9}, {3.673259096690336*^9, 
  3.6732590980544724`*^9}, {3.673781698357787*^9, 3.673781699247004*^9}, {
  3.674489377363668*^9, 3.6744893889707613`*^9}, {3.674489480941263*^9, 
  3.674489548967514*^9}, {3.674490007029896*^9, 3.67449001068388*^9}},
 CellID->377175552],

Cell[TextData[{
 "[5] Rosetta Code. \"Category: Sorting Algorithms.\" (Jun 9, 2016) ",
 ButtonBox["rosettacode.org/wiki/Category:Sorting_Algorithms",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://rosettacode.org/wiki/Category:Sorting_Algorithms"], None},
  ButtonNote->"http://rosettacode.org/wiki/Category:Sorting_Algorithms"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6731743708272805`*^9, 3.6731743711643143`*^9}, {
   3.673260548319498*^9, 3.673260548322499*^9}, {3.673781703338283*^9, 
   3.673781710767026*^9}, 3.674489553077426*^9, {3.674489632434711*^9, 
   3.6744896536698503`*^9}},
 CellID->311348252],

Cell[TextData[{
 "[6] Runestone Interactive. \"The Shell Sort.\" (Jun 9, 2016) ",
 ButtonBox["interactivepython.org/runestone/static/pythonds/SortSearch/\
TheShellSort.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://interactivepython.org/runestone/static/pythonds/SortSearch/\
TheShellSort.html"], None},
  ButtonNote->
   "http://interactivepython.org/runestone/static/pythonds/SortSearch/\
TheShellSort.html"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6731743708272805`*^9, 3.6731743711643143`*^9}, {
   3.673260548319498*^9, 3.6732605490185685`*^9}, 3.6737815510473228`*^9, {
   3.673781706601746*^9, 3.673781707506563*^9}, {3.674489687729813*^9, 
   3.67448968970776*^9}, {3.674489784456807*^9, 3.674489831662641*^9}},
 CellID->61518580]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.673087762759259*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.673781634170948*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["algorithm", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.673085637141453*^9}},
 CellID->404515773],

Cell["sort", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.673085637781114*^9}},
 CellID->503122857],

Cell["heap", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.673085652307111*^9}},
 CellID->338037657],

Cell["merge", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.673085674383233*^9}},
 CellID->179837260],

Cell["bogo", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730856896415005`*^9}},
 CellID->6635592],

Cell["quick", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730856925277777`*^9}},
 CellID->234013834],

Cell["cocktail", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.673085695507664*^9}},
 CellID->648242680],

Cell["insertion", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730857023255196`*^9}, {
  3.673085812144478*^9, 3.673085812144478*^9}},
 CellID->164564390],

Cell["elements", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730857023255196`*^9}, {
  3.673085812144478*^9, 3.67308584086784*^9}},
 CellID->663082897],

Cell["list", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730857023255196`*^9}, {
  3.673085812144478*^9, 3.673085841585509*^9}},
 CellID->410042968],

Cell["order", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730857023255196`*^9}, {
  3.673085812144478*^9, 3.673085853847375*^9}},
 CellID->79526088],

Cell["rainbow", "SearchTerms",
 CellChangeTimes->{{3.673085616765894*^9, 3.6730857023255196`*^9}, {
  3.673085812144478*^9, 3.673085855453578*^9}},
 CellID->267377920],

Cell["sorting algorithm", "SearchTerms",
 CellChangeTimes->{{3.6730859172845807`*^9, 3.6730859495031977`*^9}},
 CellID->16239780],

Cell["sorting method", "SearchTerms",
 CellChangeTimes->{{3.6730859172845807`*^9, 3.673085951717574*^9}},
 CellID->266622899],

Cell["computer science", "SearchTerms",
 CellChangeTimes->{{3.6730859172845807`*^9, 3.6730859200603485`*^9}, {
  3.673173106411852*^9, 3.6731731083800488`*^9}},
 CellID->219353175]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Quicksort versus Selection Sort",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/QuicksortVersusSelectionSort/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/QuicksortVersusSelectionSort/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.673781529071698*^9, 3.673781529071698*^9}},
 CellID->612837114],

Cell[TextData[ButtonBox["Sorting Algorithms",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/SortingAlgorithms/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/SortingAlgorithms/"]], "RelatedLinks",
 CellChangeTimes->{{3.673781611476411*^9, 3.6737816255233817`*^9}},
 CellID->848527750],

Cell[TextData[ButtonBox["Sorting Networks",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/SortingNetworks/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/SortingNetworks/"]], "RelatedLinks",
 CellChangeTimes->{{3.673781597559488*^9, 3.673781597559488*^9}},
 CellID->858827833]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Michael Zhou",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Michael+Zhou"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Michael+Zhou"],
 " and ",
 ButtonBox["Karolina Urban",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Karolina+Urban"]\
, None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Karolina+Urban"]
}], "Author",
 CellChangeTimes->{{3.672741052164552*^9, 3.6727410609065523`*^9}, {
  3.6730864448948336`*^9, 3.6730864452851534`*^9}, {3.6731733923204393`*^9, 
  3.673173413777585*^9}, {3.6733431244700603`*^9, 3.6733431294478984`*^9}},
 CellID->8415511],

Cell[TextData[{
 "Based on a program by: ",
 ButtonBox["Jay Warendorff",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/QuicksortVersusSelectionSort/"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/QuicksortVersusSelectionSort/"]
}], "Author",
 CellChangeTimes->{{3.672741052164552*^9, 3.6727410609065523`*^9}, {
  3.6730864448948336`*^9, 3.6730864452851534`*^9}, {3.6731733923204393`*^9, 
  3.673173397351943*^9}},
 CellID->83760538],

Cell["\<\
Special thanks to the University of Illinois NetMath Program and the \
mathematics department at William Fremd High School.\
\>", "Author",
 CellChangeTimes->{{3.6730864488136463`*^9, 3.6730864820428934`*^9}},
 CellID->123804500]
}, Open  ]]
}, Open  ]]
},
WindowSize->{979, 685},
WindowMargins->{{130, Automatic}, {108, Automatic}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[202478, 3888, 1464, 31, 29, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[203945, 3921, 908, 21, 29, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[200578, 3836, 637, 15, 29, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[200235, 3823, 340, 11, 29, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[202106, 3877, 369, 9, 29, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[199198, 3794, 353, 9, 29, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[199554, 3805, 678, 16, 29, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[201218, 3853, 885, 22, 29, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 210157, 4113},
 {"BookmarkAnimation", 210275, 4116},
 {"CreateAndDeleteLocators", 210397, 4119},
 {"DragLocators", 210514, 4122},
 {"GamepadControls", 210623, 4125},
 {"ResizeImages", 210731, 4128},
 {"RotateAndZoomIn3D", 210841, 4131},
 {"SliderZoom", 210950, 4134}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 245, 3, 76, "DemoTitle"],
Cell[CellGroupData[{
Cell[850, 29, 33, 0, 275, "InitializationSection"],
Cell[886, 31, 1385, 23, 41, "Input",
 InitializationCell->True,
 CellID->80882122],
Cell[2274, 56, 2829, 59, 151, "Input",
 InitializationCell->True,
 CellID->59501008],
Cell[5106, 117, 1391, 22, 25, "Input",
 InitializationCell->True,
 CellID->306412012],
Cell[6500, 141, 1465, 25, 41, "Input",
 InitializationCell->True,
 CellID->998500875],
Cell[7968, 168, 3787, 87, 120, "Input",
 InitializationCell->True,
 CellID->456636908],
Cell[11758, 257, 1465, 25, 41, "Input",
 InitializationCell->True,
 CellID->41373556],
Cell[13226, 284, 4255, 98, 137, "Input",
 InitializationCell->True,
 CellID->485889499],
Cell[17484, 384, 1466, 25, 41, "Input",
 InitializationCell->True,
 CellID->210716998],
Cell[18953, 411, 2774, 61, 89, "Input",
 InitializationCell->True,
 CellID->295516491],
Cell[21730, 474, 1473, 25, 41, "Input",
 InitializationCell->True,
 CellID->92461838],
Cell[23206, 501, 4857, 106, 169, "Input",
 InitializationCell->True,
 CellID->296549522],
Cell[28066, 609, 1466, 25, 41, "Input",
 InitializationCell->True,
 CellID->54585427],
Cell[29535, 636, 2039, 39, 57, "Input",
 InitializationCell->True,
 CellID->533275073],
Cell[31577, 677, 2159, 43, 57, "Input",
 InitializationCell->True,
 CellID->636036723],
Cell[33739, 722, 1897, 39, 102, "Input",
 InitializationCell->True,
 CellID->378081309],
Cell[35639, 763, 2028, 31, 57, "Input",
 InitializationCell->True,
 CellID->703068039],
Cell[37670, 796, 3265, 73, 89, "Input",
 InitializationCell->True,
 CellID->798663174]
}, Open  ]],
Cell[CellGroupData[{
Cell[40972, 874, 29, 0, 243, "ManipulateSection"],
Cell[CellGroupData[{
Cell[41026, 878, 5730, 124, 344, "Input"],
Cell[46759, 1004, 28563, 509, 565, "Output",
 CellID->551548572]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75371, 1519, 36, 0, 181, "ManipulateCaptionSection"],
Cell[75410, 1521, 1042, 16, 71, "ManipulateCaption",
 CellID->530434087]
}, Open  ]],
Cell[CellGroupData[{
Cell[76489, 1542, 28, 0, 179, "ThumbnailSection"],
Cell[76520, 1544, 28583, 510, 565, "Output",
 CellID->1337429152]
}, Open  ]],
Cell[CellGroupData[{
Cell[105140, 2059, 28, 0, 149, "SnapshotsSection"],
Cell[105171, 2061, 28591, 510, 565, "Output",
 CellID->460424515],
Cell[133765, 2573, 28606, 510, 565, "Output",
 CellID->971243464],
Cell[162374, 3085, 28602, 510, 565, "Output",
 CellID->665698601]
}, Open  ]],
Cell[CellGroupData[{
Cell[191013, 3600, 26, 0, 357, "DetailsSection"],
Cell[191042, 3602, 554, 9, 39, "DetailNotes",
 CellID->140430483],
Cell[191599, 3613, 539, 9, 39, "DetailNotes",
 CellID->27248625],
Cell[192141, 3624, 528, 9, 39, "DetailNotes",
 CellID->238474517],
Cell[192672, 3635, 598, 10, 39, "DetailNotes",
 CellID->51758367],
Cell[193273, 3647, 737, 12, 55, "DetailNotes",
 CellID->171160818],
Cell[194013, 3661, 371, 7, 23, "DetailNotes",
 CellID->2137403938],
Cell[194387, 3670, 121, 2, 23, "DetailNotes",
 CellID->364683713],
Cell[194511, 3674, 798, 18, 23, "DetailNotes",
 CellID->55791791],
Cell[195312, 3694, 838, 19, 23, "DetailNotes",
 CellID->190478222],
Cell[196153, 3715, 724, 17, 23, "DetailNotes",
 CellID->9534321],
Cell[196880, 3734, 844, 19, 39, "DetailNotes",
 CellID->377175552],
Cell[197727, 3755, 628, 13, 23, "DetailNotes",
 CellID->311348252],
Cell[198358, 3770, 763, 17, 23, "DetailNotes",
 CellID->61518580]
}, Open  ]],
Cell[CellGroupData[{
Cell[199158, 3792, 37, 0, 131, "ControlSuggestionsSection"],
Cell[199198, 3794, 353, 9, 29, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[199554, 3805, 678, 16, 29, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[200235, 3823, 340, 11, 29, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[200578, 3836, 637, 15, 29, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[201218, 3853, 885, 22, 29, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[202106, 3877, 369, 9, 29, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[202478, 3888, 1464, 31, 29, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[203945, 3921, 908, 21, 29, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204890, 3947, 30, 0, 165, "SearchTermsSection"],
Cell[204923, 3949, 118, 2, 23, "SearchTerms",
 CellID->404515773],
Cell[205044, 3953, 113, 2, 23, "SearchTerms",
 CellID->503122857],
Cell[205160, 3957, 113, 2, 23, "SearchTerms",
 CellID->338037657],
Cell[205276, 3961, 114, 2, 23, "SearchTerms",
 CellID->179837260],
Cell[205393, 3965, 113, 2, 23, "SearchTerms",
 CellID->6635592],
Cell[205509, 3969, 116, 2, 23, "SearchTerms",
 CellID->234013834],
Cell[205628, 3973, 117, 2, 23, "SearchTerms",
 CellID->648242680],
Cell[205748, 3977, 169, 3, 23, "SearchTerms",
 CellID->164564390],
Cell[205920, 3982, 167, 3, 23, "SearchTerms",
 CellID->663082897],
Cell[206090, 3987, 164, 3, 23, "SearchTerms",
 CellID->410042968],
Cell[206257, 3992, 164, 3, 23, "SearchTerms",
 CellID->79526088],
Cell[206424, 3997, 167, 3, 23, "SearchTerms",
 CellID->267377920],
Cell[206594, 4002, 129, 2, 23, "SearchTerms",
 CellID->16239780],
Cell[206726, 4006, 125, 2, 23, "SearchTerms",
 CellID->266622899],
Cell[206854, 4010, 180, 3, 23, "SearchTerms",
 CellID->219353175]
}, Open  ]],
Cell[CellGroupData[{
Cell[207071, 4018, 31, 0, 149, "RelatedLinksSection"],
Cell[207105, 4020, 373, 9, 23, "RelatedLinks",
 CellID->612837114],
Cell[207481, 4031, 334, 7, 23, "RelatedLinks",
 CellID->848527750],
Cell[207818, 4040, 326, 7, 23, "RelatedLinks",
 CellID->858827833]
}, Open  ]],
Cell[CellGroupData[{
Cell[208181, 4052, 25, 0, 149, "AuthorSection"],
Cell[208209, 4054, 796, 21, 23, "Author",
 CellID->8415511],
Cell[209008, 4077, 492, 13, 23, "Author",
 CellID->83760538],
Cell[209503, 4092, 239, 5, 23, "Author",
 CellID->123804500]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
